{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Citrix Federated Authentication Service 1906 PowerShell cmdlets Citrix Federated Authentication Service provides various Microsoft Windows PowerShell cmdlets in a PowerShell snapin. These cmdlets allow you to perform advanced configuration functions. Installation Install the Federated Authentication Service. Install the Federated Authentication Service PowerShell snapin using the following command: Add-PSSnapin Citrix.Authentication.FederatedAuthenticationService.V1 Note : In a PowerShell window, you can use Get-Help \\ to display cmdlet help. To access and run the cmdlets Start a shell in PowerShell. Cmdlets Get-FasAdministrationPolicy Get-FasAuthorizationCertificate Get-FasCertificateDefinition Get-FasMsCertificateAuthority Get-FasMsTemplate Get-FasPolicyOid Get-FasPrivateKeyPoolInfo Get-FasRule Get-FasServer Get-FasServerForUser Get-FasUserCertificate Import-FasAuthorizationCertificateResponse New-FasAuthorizationCertificate New-FasAuthorizationCertificateRequest New-FasCertificateDefinition New-FasMsTemplate New-FasPolicyOid New-FasRule New-FasUserCertificate Publish-FasMsTemplate Remove-FasAuthorizationCertificate Remove-FasCertificateDefinition Remove-FasMsTemplate Remove-FasPolicyOid Remove-FasRule Remove-FasUserCertificate Set-FasAdministrationPolicy Set-FasCertificateDefinition Set-FasPolicyOid Set-FasRule Set-FasServer Test-FasCertificateSigningRequest Test-FasCrypto Test-FasKeyPairCreation Test-FasUserCertificateCrypto Unpublish-FasMsTemplate","title":"Introduction"},{"location":"#citrix-federated-authentication-service-1906-powershell-cmdlets","text":"Citrix Federated Authentication Service provides various Microsoft Windows PowerShell cmdlets in a PowerShell snapin. These cmdlets allow you to perform advanced configuration functions.","title":"Citrix Federated Authentication Service 1906 PowerShell cmdlets"},{"location":"#installation","text":"Install the Federated Authentication Service. Install the Federated Authentication Service PowerShell snapin using the following command: Add-PSSnapin Citrix.Authentication.FederatedAuthenticationService.V1 Note : In a PowerShell window, you can use Get-Help \\ to display cmdlet help.","title":"Installation"},{"location":"#to-access-and-run-the-cmdlets","text":"Start a shell in PowerShell.","title":"To access and run the cmdlets"},{"location":"#cmdlets","text":"Get-FasAdministrationPolicy Get-FasAuthorizationCertificate Get-FasCertificateDefinition Get-FasMsCertificateAuthority Get-FasMsTemplate Get-FasPolicyOid Get-FasPrivateKeyPoolInfo Get-FasRule Get-FasServer Get-FasServerForUser Get-FasUserCertificate Import-FasAuthorizationCertificateResponse New-FasAuthorizationCertificate New-FasAuthorizationCertificateRequest New-FasCertificateDefinition New-FasMsTemplate New-FasPolicyOid New-FasRule New-FasUserCertificate Publish-FasMsTemplate Remove-FasAuthorizationCertificate Remove-FasCertificateDefinition Remove-FasMsTemplate Remove-FasPolicyOid Remove-FasRule Remove-FasUserCertificate Set-FasAdministrationPolicy Set-FasCertificateDefinition Set-FasPolicyOid Set-FasRule Set-FasServer Test-FasCertificateSigningRequest Test-FasCrypto Test-FasKeyPairCreation Test-FasUserCertificateCrypto Unpublish-FasMsTemplate","title":"Cmdlets"},{"location":"Get-FasAdministrationPolicy/","text":"Get-FasAdministrationPolicy Synopsis Retrieve information about the local administration policy for Federated Authentication Service (FAS). Syntax Get-FasAdministrationPolicy [ CommonParameters ] Description This cmdlet retrieves information about the local administration policy for Federated Authentication Service (FAS). Examples Example 1 PS C:\\> C:\\PS Get-FasAdministrationPolicy Description This code returns information about the local administration policy. Parameters CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet returns information about the local administration policy. Notes Related Links Set-FasAdministrationPolicy","title":"Get-FasAdministrationPolicy"},{"location":"Get-FasAdministrationPolicy/#get-fasadministrationpolicy","text":"","title":"Get-FasAdministrationPolicy"},{"location":"Get-FasAdministrationPolicy/#synopsis","text":"Retrieve information about the local administration policy for Federated Authentication Service (FAS).","title":"Synopsis"},{"location":"Get-FasAdministrationPolicy/#syntax","text":"Get-FasAdministrationPolicy [ CommonParameters ]","title":"Syntax"},{"location":"Get-FasAdministrationPolicy/#description","text":"This cmdlet retrieves information about the local administration policy for Federated Authentication Service (FAS).","title":"Description"},{"location":"Get-FasAdministrationPolicy/#examples","text":"","title":"Examples"},{"location":"Get-FasAdministrationPolicy/#example-1","text":"PS C:\\> C:\\PS Get-FasAdministrationPolicy Description This code returns information about the local administration policy.","title":"Example 1"},{"location":"Get-FasAdministrationPolicy/#parameters","text":"","title":"Parameters"},{"location":"Get-FasAdministrationPolicy/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Get-FasAdministrationPolicy/#inputs","text":"","title":"Inputs"},{"location":"Get-FasAdministrationPolicy/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Get-FasAdministrationPolicy/#outputs","text":"","title":"Outputs"},{"location":"Get-FasAdministrationPolicy/#void","text":"This cmdlet returns information about the local administration policy.","title":"void"},{"location":"Get-FasAdministrationPolicy/#notes","text":"","title":"Notes"},{"location":"Get-FasAdministrationPolicy/#related-links","text":"Set-FasAdministrationPolicy","title":"Related Links"},{"location":"Get-FasAuthorizationCertificate/","text":"Get-FasAuthorizationCertificate Synopsis List the currently available Authorization certificates in use by the Federated Authentication Service server. Syntax Get-FasAuthorizationCertificate [-CertificateAuthority String ] [-Address String ] [-UserName String ] [-Password String ] [-FullCertInfo Boolean ] [ CommonParameters ] Description List the currently available Authorization certificates in use by the Federated Authentication Service server. The Federated Authentication Service works by dynamically issuing user logon certificates from a Microsoft Certificate Authority. To do this it must first be granted an \"Authorization Certificate\" (often called an RA or Enrollement Agent certificate) to authenticate to the Certificate Authority. This command lists all of the WaitingForApproval, Ok, Expired and NotYetValid Authorization certificates available to the FAS server. The certificate and private key are stored in a container based on the \"TrustArea\" GUID. Examples Example 1 PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Get-FasAuthorizationCertificate Description This code lists the Authorization certificate on a FAS server. This includes its unique ID, the CA used to issue the certificate, an indication of whether the certificate is currently usable (as opposed to expired or waiting for approval), and the storage container name (TrustArea) Example 2 PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Get-FasAuthorizationCertificate -FullCertInfo Description This code lists the Authorization certificate on a FAS server, including detail about the certificate itself Parameters -CertificateAuthority Filter by Address of the Certificate Authority used to issue the Authorization Certificate ($NULL to return all certificates). Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserName User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Password Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -FullCertInfo Flag specifying if details of the authorization certificate should be returned Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $true Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Address Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs FasAuthorizationCertificate This cmdlet returns a list of FasAuthorizationCertificate objects Notes Related Links Get-FasAuthorizationCertificate Remove-FasAuthorizationCertificate","title":"Get-FasAuthorizationCertificate"},{"location":"Get-FasAuthorizationCertificate/#get-fasauthorizationcertificate","text":"","title":"Get-FasAuthorizationCertificate"},{"location":"Get-FasAuthorizationCertificate/#synopsis","text":"List the currently available Authorization certificates in use by the Federated Authentication Service server.","title":"Synopsis"},{"location":"Get-FasAuthorizationCertificate/#syntax","text":"Get-FasAuthorizationCertificate [-CertificateAuthority String ] [-Address String ] [-UserName String ] [-Password String ] [-FullCertInfo Boolean ] [ CommonParameters ]","title":"Syntax"},{"location":"Get-FasAuthorizationCertificate/#description","text":"List the currently available Authorization certificates in use by the Federated Authentication Service server. The Federated Authentication Service works by dynamically issuing user logon certificates from a Microsoft Certificate Authority. To do this it must first be granted an \"Authorization Certificate\" (often called an RA or Enrollement Agent certificate) to authenticate to the Certificate Authority. This command lists all of the WaitingForApproval, Ok, Expired and NotYetValid Authorization certificates available to the FAS server. The certificate and private key are stored in a container based on the \"TrustArea\" GUID.","title":"Description"},{"location":"Get-FasAuthorizationCertificate/#examples","text":"","title":"Examples"},{"location":"Get-FasAuthorizationCertificate/#example-1","text":"PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Get-FasAuthorizationCertificate Description This code lists the Authorization certificate on a FAS server. This includes its unique ID, the CA used to issue the certificate, an indication of whether the certificate is currently usable (as opposed to expired or waiting for approval), and the storage container name (TrustArea)","title":"Example 1"},{"location":"Get-FasAuthorizationCertificate/#example-2","text":"PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Get-FasAuthorizationCertificate -FullCertInfo Description This code lists the Authorization certificate on a FAS server, including detail about the certificate itself","title":"Example 2"},{"location":"Get-FasAuthorizationCertificate/#parameters","text":"","title":"Parameters"},{"location":"Get-FasAuthorizationCertificate/#-certificateauthority","text":"Filter by Address of the Certificate Authority used to issue the Authorization Certificate ($NULL to return all certificates). Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CertificateAuthority"},{"location":"Get-FasAuthorizationCertificate/#-username","text":"User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserName"},{"location":"Get-FasAuthorizationCertificate/#-password","text":"Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Password"},{"location":"Get-FasAuthorizationCertificate/#-fullcertinfo","text":"Flag specifying if details of the authorization certificate should be returned Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $true Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-FullCertInfo"},{"location":"Get-FasAuthorizationCertificate/#-address","text":"Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"Get-FasAuthorizationCertificate/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Get-FasAuthorizationCertificate/#inputs","text":"","title":"Inputs"},{"location":"Get-FasAuthorizationCertificate/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Get-FasAuthorizationCertificate/#outputs","text":"","title":"Outputs"},{"location":"Get-FasAuthorizationCertificate/#fasauthorizationcertificate","text":"This cmdlet returns a list of FasAuthorizationCertificate objects","title":"FasAuthorizationCertificate"},{"location":"Get-FasAuthorizationCertificate/#notes","text":"","title":"Notes"},{"location":"Get-FasAuthorizationCertificate/#related-links","text":"Get-FasAuthorizationCertificate Remove-FasAuthorizationCertificate","title":"Related Links"},{"location":"Get-FasCertificateDefinition/","text":"Get-FasCertificateDefinition Synopsis List or view existing Certificate Definition objects (recipe for issuing a certificate). Syntax Get-FasCertificateDefinition [-Name String ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ] Description View the configuration of existing Certificate Definition objects that the FAS is using to generate certificates. When generating a certificate, the FAS requires various pieces of information. Including: - The CertificateTemplate to request (see Get-FasMsTemplate) - A list of loadbalanced/failover Certificate Authority Addresses (see Get-FasMsCertificateAuthority) - A reference to the AuthorizationCertificate to use to Authorize the request (see Get-FasAuthorizationCertificate) - A list of additional Issuance Policy OIDs to add to the certificate request (see Get-FasPolicyOid) - A flag indicating if the certificate can be used as an in-session Virtual Smart Card, or only for the logon process. Note that Certificate Definition objects can only be created and managed by the FAS Server administrator, although they can be referenced by \"Rule\" administrators. Examples Example 1 PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Get-FasCertificateDefinition Description Lists the Certificate Definition objects for certificates that are being generated by the FAS Server Parameters -Name Specify the name of the Certificate Definition to view. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Address Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserName User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Password Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet does not return a value Notes Related Links New-FasCertificateDefinition Set-FasCertificateDefinition Remove-FasCertificateDefinition","title":"Get-FasCertificateDefinition"},{"location":"Get-FasCertificateDefinition/#get-fascertificatedefinition","text":"","title":"Get-FasCertificateDefinition"},{"location":"Get-FasCertificateDefinition/#synopsis","text":"List or view existing Certificate Definition objects (recipe for issuing a certificate).","title":"Synopsis"},{"location":"Get-FasCertificateDefinition/#syntax","text":"Get-FasCertificateDefinition [-Name String ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ]","title":"Syntax"},{"location":"Get-FasCertificateDefinition/#description","text":"View the configuration of existing Certificate Definition objects that the FAS is using to generate certificates. When generating a certificate, the FAS requires various pieces of information. Including: - The CertificateTemplate to request (see Get-FasMsTemplate) - A list of loadbalanced/failover Certificate Authority Addresses (see Get-FasMsCertificateAuthority) - A reference to the AuthorizationCertificate to use to Authorize the request (see Get-FasAuthorizationCertificate) - A list of additional Issuance Policy OIDs to add to the certificate request (see Get-FasPolicyOid) - A flag indicating if the certificate can be used as an in-session Virtual Smart Card, or only for the logon process. Note that Certificate Definition objects can only be created and managed by the FAS Server administrator, although they can be referenced by \"Rule\" administrators.","title":"Description"},{"location":"Get-FasCertificateDefinition/#examples","text":"","title":"Examples"},{"location":"Get-FasCertificateDefinition/#example-1","text":"PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Get-FasCertificateDefinition Description Lists the Certificate Definition objects for certificates that are being generated by the FAS Server","title":"Example 1"},{"location":"Get-FasCertificateDefinition/#parameters","text":"","title":"Parameters"},{"location":"Get-FasCertificateDefinition/#-name","text":"Specify the name of the Certificate Definition to view. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Name"},{"location":"Get-FasCertificateDefinition/#-address","text":"Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"Get-FasCertificateDefinition/#-username","text":"User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserName"},{"location":"Get-FasCertificateDefinition/#-password","text":"Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Password"},{"location":"Get-FasCertificateDefinition/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Get-FasCertificateDefinition/#inputs","text":"","title":"Inputs"},{"location":"Get-FasCertificateDefinition/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Get-FasCertificateDefinition/#outputs","text":"","title":"Outputs"},{"location":"Get-FasCertificateDefinition/#void","text":"This cmdlet does not return a value","title":"void"},{"location":"Get-FasCertificateDefinition/#notes","text":"","title":"Notes"},{"location":"Get-FasCertificateDefinition/#related-links","text":"New-FasCertificateDefinition Set-FasCertificateDefinition Remove-FasCertificateDefinition","title":"Related Links"},{"location":"Get-FasMsCertificateAuthority/","text":"Get-FasMsCertificateAuthority Synopsis Retrieve information about the Microsoft Certificate Authorities installed in the domain. Syntax Get-FasMsCertificateAuthority [-Address String ] [-Default Boolean ] [ CommonParameters ] Description This commandlet retrieves information about the Microsoft Certificate Authorities installed in the domain, including their unique identifying addresses. Examples Example 1 PS C:\\> C:\\PS Get-FasMsCertificateAuthority -Default Description This command retrieves the address of the default Microsoft Certificate Authority in this domain. Parameters -Address Specifies the address of the Microsoft Certificate Authority to retrieve information about (or list them all) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Default Return the default or primary Microsoft Certificate Authority in the current domain. Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $FALSE Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet returns a list of Microsoft Certificate Authority objects Notes Related Links Publish-FasMsTemplate Unpublish-FasMsTemplate","title":"Get-FasMsCertificateAuthority"},{"location":"Get-FasMsCertificateAuthority/#get-fasmscertificateauthority","text":"","title":"Get-FasMsCertificateAuthority"},{"location":"Get-FasMsCertificateAuthority/#synopsis","text":"Retrieve information about the Microsoft Certificate Authorities installed in the domain.","title":"Synopsis"},{"location":"Get-FasMsCertificateAuthority/#syntax","text":"Get-FasMsCertificateAuthority [-Address String ] [-Default Boolean ] [ CommonParameters ]","title":"Syntax"},{"location":"Get-FasMsCertificateAuthority/#description","text":"This commandlet retrieves information about the Microsoft Certificate Authorities installed in the domain, including their unique identifying addresses.","title":"Description"},{"location":"Get-FasMsCertificateAuthority/#examples","text":"","title":"Examples"},{"location":"Get-FasMsCertificateAuthority/#example-1","text":"PS C:\\> C:\\PS Get-FasMsCertificateAuthority -Default Description This command retrieves the address of the default Microsoft Certificate Authority in this domain.","title":"Example 1"},{"location":"Get-FasMsCertificateAuthority/#parameters","text":"","title":"Parameters"},{"location":"Get-FasMsCertificateAuthority/#-address","text":"Specifies the address of the Microsoft Certificate Authority to retrieve information about (or list them all) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"Get-FasMsCertificateAuthority/#-default","text":"Return the default or primary Microsoft Certificate Authority in the current domain. Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $FALSE Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Default"},{"location":"Get-FasMsCertificateAuthority/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Get-FasMsCertificateAuthority/#inputs","text":"","title":"Inputs"},{"location":"Get-FasMsCertificateAuthority/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Get-FasMsCertificateAuthority/#outputs","text":"","title":"Outputs"},{"location":"Get-FasMsCertificateAuthority/#void","text":"This cmdlet returns a list of Microsoft Certificate Authority objects","title":"void"},{"location":"Get-FasMsCertificateAuthority/#notes","text":"","title":"Notes"},{"location":"Get-FasMsCertificateAuthority/#related-links","text":"Publish-FasMsTemplate Unpublish-FasMsTemplate","title":"Related Links"},{"location":"Get-FasMsTemplate/","text":"Get-FasMsTemplate Synopsis Lists the Microsoft Certificate Templates currently installed in an Active Directory environment. Syntax Get-FasMsTemplate [-Name String ] [ CommonParameters ] Description This commandlet lists information about the Microsoft Certificate Templates currently installed in an Active Directory Deployment Microsoft Certificate Authority uses Certificate Templates to describe the types of certificates that it can issue. This includes information such as the validity period and how the certificate should be authorized. Certificate Templates can be referenced by their name and unique OID string. This commandlet also returns the security descriptor that controls access to the Certificate Template as an SDDL string. Examples Example 1 PS C:\\> C:\\PS Get-FasMsTemplate -Name Citrix_SmartcardLogon Description Return information about the certificate template named Citrix_SmartcardLogon that is installed in Active Directory Parameters -Name Specifies a particular template name to retrieve. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : Retrieve all templates Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs List of Templates This cmdlet returns a list of certificate templates. Notes Related Links New-FasMsTemplate Publish-FasMsTemplate Unpublish-FasMsTemplate Remove-FasMsTemplate","title":"Get-FasMsTemplate"},{"location":"Get-FasMsTemplate/#get-fasmstemplate","text":"","title":"Get-FasMsTemplate"},{"location":"Get-FasMsTemplate/#synopsis","text":"Lists the Microsoft Certificate Templates currently installed in an Active Directory environment.","title":"Synopsis"},{"location":"Get-FasMsTemplate/#syntax","text":"Get-FasMsTemplate [-Name String ] [ CommonParameters ]","title":"Syntax"},{"location":"Get-FasMsTemplate/#description","text":"This commandlet lists information about the Microsoft Certificate Templates currently installed in an Active Directory Deployment Microsoft Certificate Authority uses Certificate Templates to describe the types of certificates that it can issue. This includes information such as the validity period and how the certificate should be authorized. Certificate Templates can be referenced by their name and unique OID string. This commandlet also returns the security descriptor that controls access to the Certificate Template as an SDDL string.","title":"Description"},{"location":"Get-FasMsTemplate/#examples","text":"","title":"Examples"},{"location":"Get-FasMsTemplate/#example-1","text":"PS C:\\> C:\\PS Get-FasMsTemplate -Name Citrix_SmartcardLogon Description Return information about the certificate template named Citrix_SmartcardLogon that is installed in Active Directory","title":"Example 1"},{"location":"Get-FasMsTemplate/#parameters","text":"","title":"Parameters"},{"location":"Get-FasMsTemplate/#-name","text":"Specifies a particular template name to retrieve. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : Retrieve all templates Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Name"},{"location":"Get-FasMsTemplate/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Get-FasMsTemplate/#inputs","text":"","title":"Inputs"},{"location":"Get-FasMsTemplate/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Get-FasMsTemplate/#outputs","text":"","title":"Outputs"},{"location":"Get-FasMsTemplate/#list-of-templates","text":"This cmdlet returns a list of certificate templates.","title":"List of Templates"},{"location":"Get-FasMsTemplate/#notes","text":"","title":"Notes"},{"location":"Get-FasMsTemplate/#related-links","text":"New-FasMsTemplate Publish-FasMsTemplate Unpublish-FasMsTemplate Remove-FasMsTemplate","title":"Related Links"},{"location":"Get-FasPolicyOid/","text":"Get-FasPolicyOid Synopsis Retrieve information about the Issuance Policy Oids registered in the domain. Syntax Get-FasPolicyOid [-Name String ] [-Path String ] [ CommonParameters ] Description This commandlet retrieves information about the Issuance Policy Oids registered in the domain, including their human readable name and associated security groups. Certificate Issuance Policy Oids are attributes that can optionally be included in certificates issued by the Microsoft Certificate Authority. By default, these include Low/Medium/High Assurance levels and provide an indication of the level or type of approval to which a certificate holder has been authorized. When logging in, Windows will dynamically add the user to additional Universal Security Groups that have been associated with these Oids. Examples Example 1 PS C:\\> C:\\PS Get-FasPolicyOid Description This command retrieves the address Policy Oids registered in this forest. Parameters -Name Specifies the name of a policy oid to retrieve (or $NULL to list them all). Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Path Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet returns a list of Microsoft Policy Oid objects Notes Related Links New-FasPolicyOid Set-FasPolicyOid Remove-FasPolicyOid","title":"Get-FasPolicyOid"},{"location":"Get-FasPolicyOid/#get-faspolicyoid","text":"","title":"Get-FasPolicyOid"},{"location":"Get-FasPolicyOid/#synopsis","text":"Retrieve information about the Issuance Policy Oids registered in the domain.","title":"Synopsis"},{"location":"Get-FasPolicyOid/#syntax","text":"Get-FasPolicyOid [-Name String ] [-Path String ] [ CommonParameters ]","title":"Syntax"},{"location":"Get-FasPolicyOid/#description","text":"This commandlet retrieves information about the Issuance Policy Oids registered in the domain, including their human readable name and associated security groups. Certificate Issuance Policy Oids are attributes that can optionally be included in certificates issued by the Microsoft Certificate Authority. By default, these include Low/Medium/High Assurance levels and provide an indication of the level or type of approval to which a certificate holder has been authorized. When logging in, Windows will dynamically add the user to additional Universal Security Groups that have been associated with these Oids.","title":"Description"},{"location":"Get-FasPolicyOid/#examples","text":"","title":"Examples"},{"location":"Get-FasPolicyOid/#example-1","text":"PS C:\\> C:\\PS Get-FasPolicyOid Description This command retrieves the address Policy Oids registered in this forest.","title":"Example 1"},{"location":"Get-FasPolicyOid/#parameters","text":"","title":"Parameters"},{"location":"Get-FasPolicyOid/#-name","text":"Specifies the name of a policy oid to retrieve (or $NULL to list them all). Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Name"},{"location":"Get-FasPolicyOid/#-path","text":"Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Path"},{"location":"Get-FasPolicyOid/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Get-FasPolicyOid/#inputs","text":"","title":"Inputs"},{"location":"Get-FasPolicyOid/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Get-FasPolicyOid/#outputs","text":"","title":"Outputs"},{"location":"Get-FasPolicyOid/#void","text":"This cmdlet returns a list of Microsoft Policy Oid objects","title":"void"},{"location":"Get-FasPolicyOid/#notes","text":"","title":"Notes"},{"location":"Get-FasPolicyOid/#related-links","text":"New-FasPolicyOid Set-FasPolicyOid Remove-FasPolicyOid","title":"Related Links"},{"location":"Get-FasPrivateKeyPoolInfo/","text":"Get-FasPrivateKeyPoolInfo Synopsis Gets information about the FAS server's private key pool Syntax Get-FasPrivateKeyPoolInfo [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ] Description This command gets information about the FAS server's private key pool. Key pair creation is resource intensive, so FAS maintains a pool of private keys to use in certificate signing requests (CSRs) Examples Example 1 PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Get-FasPrivateKeyPoolInfo Description Returns information about the FAS server's private key pool Parameters -Address Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserName User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Password Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs PrivateKeyPoolInfo This cmdlet returns a PrivateKeyPoolInfo object Notes Related Links","title":"Get-FasPrivateKeyPoolInfo"},{"location":"Get-FasPrivateKeyPoolInfo/#get-fasprivatekeypoolinfo","text":"","title":"Get-FasPrivateKeyPoolInfo"},{"location":"Get-FasPrivateKeyPoolInfo/#synopsis","text":"Gets information about the FAS server's private key pool","title":"Synopsis"},{"location":"Get-FasPrivateKeyPoolInfo/#syntax","text":"Get-FasPrivateKeyPoolInfo [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ]","title":"Syntax"},{"location":"Get-FasPrivateKeyPoolInfo/#description","text":"This command gets information about the FAS server's private key pool. Key pair creation is resource intensive, so FAS maintains a pool of private keys to use in certificate signing requests (CSRs)","title":"Description"},{"location":"Get-FasPrivateKeyPoolInfo/#examples","text":"","title":"Examples"},{"location":"Get-FasPrivateKeyPoolInfo/#example-1","text":"PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Get-FasPrivateKeyPoolInfo Description Returns information about the FAS server's private key pool","title":"Example 1"},{"location":"Get-FasPrivateKeyPoolInfo/#parameters","text":"","title":"Parameters"},{"location":"Get-FasPrivateKeyPoolInfo/#-address","text":"Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"Get-FasPrivateKeyPoolInfo/#-username","text":"User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserName"},{"location":"Get-FasPrivateKeyPoolInfo/#-password","text":"Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Password"},{"location":"Get-FasPrivateKeyPoolInfo/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Get-FasPrivateKeyPoolInfo/#inputs","text":"","title":"Inputs"},{"location":"Get-FasPrivateKeyPoolInfo/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Get-FasPrivateKeyPoolInfo/#outputs","text":"","title":"Outputs"},{"location":"Get-FasPrivateKeyPoolInfo/#privatekeypoolinfo","text":"This cmdlet returns a PrivateKeyPoolInfo object","title":"PrivateKeyPoolInfo"},{"location":"Get-FasPrivateKeyPoolInfo/#notes","text":"","title":"Notes"},{"location":"Get-FasPrivateKeyPoolInfo/#related-links","text":"","title":"Related Links"},{"location":"Get-FasRule/","text":"Get-FasRule Synopsis List the Rules configured on the FAS server. Syntax Get-FasRule [-Name String ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ] Description Retrieve the configuration of existing rules configured on a FAS server. Normally to log in to a Windows computer the Active Directory Domain Controllers require that \"primary credentials\" be present - that is a password, or a smartcard, etc. An instance of a Federated Authentication Service allows trusted servers to \"assert\" user identities without knowledge of primary credentials. The configuration options are: - The name of the Rule or Service instance. Usually there will be at least one service named \"default\", but further, independent services can be run. - A reference to the certificate definitions used to issue Virtual Smart Card certificates when user identities are asserted. Note that only Certificate Definitions marked \"InSession\" can be used after the logon stage. - A reference to the Virtual Smart Card to use for log on. By default this is the first in the list of Certificate Definitions. - A list of Windows Accounts that are trusted to assert identities for this Rule. For security reasons, this must be chosen very carefully - usually it will be the explicit machine accounts of your StoreFront servers. - A list of Windows User Accounts that can be asserted. Usually this will be restricted to a security group. For example \"ExternalCitrixUserGroup\" - A list of VDA Windows Accounts that can act as relying parties to log users in. For example, \"CitrixVdaMachines\" - A list of administrators who have can modify (but not create or delete) the rule. Examples Example 1 PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Get-FasRule Description This code lists the Rules configured on the Federated Authentication Service Parameters -Name Specify the name of the rule to retrieve ($NULL to list all rules). Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Address Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserName User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Password Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet does not return a value Notes Related Links New-FasRule Set-FasRule Remove-FasRule","title":"Get-FasRule"},{"location":"Get-FasRule/#get-fasrule","text":"","title":"Get-FasRule"},{"location":"Get-FasRule/#synopsis","text":"List the Rules configured on the FAS server.","title":"Synopsis"},{"location":"Get-FasRule/#syntax","text":"Get-FasRule [-Name String ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ]","title":"Syntax"},{"location":"Get-FasRule/#description","text":"Retrieve the configuration of existing rules configured on a FAS server. Normally to log in to a Windows computer the Active Directory Domain Controllers require that \"primary credentials\" be present - that is a password, or a smartcard, etc. An instance of a Federated Authentication Service allows trusted servers to \"assert\" user identities without knowledge of primary credentials. The configuration options are: - The name of the Rule or Service instance. Usually there will be at least one service named \"default\", but further, independent services can be run. - A reference to the certificate definitions used to issue Virtual Smart Card certificates when user identities are asserted. Note that only Certificate Definitions marked \"InSession\" can be used after the logon stage. - A reference to the Virtual Smart Card to use for log on. By default this is the first in the list of Certificate Definitions. - A list of Windows Accounts that are trusted to assert identities for this Rule. For security reasons, this must be chosen very carefully - usually it will be the explicit machine accounts of your StoreFront servers. - A list of Windows User Accounts that can be asserted. Usually this will be restricted to a security group. For example \"ExternalCitrixUserGroup\" - A list of VDA Windows Accounts that can act as relying parties to log users in. For example, \"CitrixVdaMachines\" - A list of administrators who have can modify (but not create or delete) the rule.","title":"Description"},{"location":"Get-FasRule/#examples","text":"","title":"Examples"},{"location":"Get-FasRule/#example-1","text":"PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Get-FasRule Description This code lists the Rules configured on the Federated Authentication Service","title":"Example 1"},{"location":"Get-FasRule/#parameters","text":"","title":"Parameters"},{"location":"Get-FasRule/#-name","text":"Specify the name of the rule to retrieve ($NULL to list all rules). Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Name"},{"location":"Get-FasRule/#-address","text":"Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"Get-FasRule/#-username","text":"User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserName"},{"location":"Get-FasRule/#-password","text":"Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Password"},{"location":"Get-FasRule/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Get-FasRule/#inputs","text":"","title":"Inputs"},{"location":"Get-FasRule/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Get-FasRule/#outputs","text":"","title":"Outputs"},{"location":"Get-FasRule/#void","text":"This cmdlet does not return a value","title":"void"},{"location":"Get-FasRule/#notes","text":"","title":"Notes"},{"location":"Get-FasRule/#related-links","text":"New-FasRule Set-FasRule Remove-FasRule","title":"Related Links"},{"location":"Get-FasServer/","text":"Get-FasServer Synopsis Retrieve information about the Federated Authentication Service (FAS) servers configured via Group Policy. Syntax Get-FasServer [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ] Description This cmdlet returns information about the Federated Authentication Service (FAS) servers configured on this server via GPO. In particular this includes the addresses for remote configuration. Examples Example 1 PS C:\\> C:\\PS Get-FasServer Description This code lists the FAS Servers configured via Group Policy. Parameters -Address Specify a particular FAS server to contact (or $NULL to list all configured servers) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserName User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Password Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet returns a list of FAS server objects Notes Related Links","title":"Get-FasServer"},{"location":"Get-FasServer/#get-fasserver","text":"","title":"Get-FasServer"},{"location":"Get-FasServer/#synopsis","text":"Retrieve information about the Federated Authentication Service (FAS) servers configured via Group Policy.","title":"Synopsis"},{"location":"Get-FasServer/#syntax","text":"Get-FasServer [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ]","title":"Syntax"},{"location":"Get-FasServer/#description","text":"This cmdlet returns information about the Federated Authentication Service (FAS) servers configured on this server via GPO. In particular this includes the addresses for remote configuration.","title":"Description"},{"location":"Get-FasServer/#examples","text":"","title":"Examples"},{"location":"Get-FasServer/#example-1","text":"PS C:\\> C:\\PS Get-FasServer Description This code lists the FAS Servers configured via Group Policy.","title":"Example 1"},{"location":"Get-FasServer/#parameters","text":"","title":"Parameters"},{"location":"Get-FasServer/#-address","text":"Specify a particular FAS server to contact (or $NULL to list all configured servers) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"Get-FasServer/#-username","text":"User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserName"},{"location":"Get-FasServer/#-password","text":"Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Password"},{"location":"Get-FasServer/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Get-FasServer/#inputs","text":"","title":"Inputs"},{"location":"Get-FasServer/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Get-FasServer/#outputs","text":"","title":"Outputs"},{"location":"Get-FasServer/#void","text":"This cmdlet returns a list of FAS server objects","title":"void"},{"location":"Get-FasServer/#notes","text":"","title":"Notes"},{"location":"Get-FasServer/#related-links","text":"","title":"Related Links"},{"location":"Get-FasServerForUser/","text":"Get-FasServerForUser Synopsis Identify the primary and failover Federated Authentication Server addresses for a UPN. Syntax Get-FasServerForUser [-UserPrincipalNames String[] ] [ CommonParameters ] Description This cmdlet identifies the addresses of the primary and failover Federated Authentication Server to use for a specified UPN. A deterministic algorithm based on a SHA512 hash of the UPN is used to identify the addresses of two Federated Authentication Service servers, based on configuration in Group Policy. As long as the same Group Policy configuration is applied to all computers, the same addresses will be generated for each user. It's important to note that the explicit UPN should be used. In the cases where an explicit UPN is not set, the implicit UPN should be used. When a user logs in to Storefront the primary FAS server identified by this commandlet will be contacted, followed by the failover FAS server if the primary server is unavailable. If the failover server is also unavailable Storefront will continue to try other FAS servers. This algorithm allows user certificates to be cached in an efficient manner. Examples Example 1 PS C:\\> C:\\PS Get-FasServerForUser -UserPrincipalNames @( user1@mycompany.com , user2@mycompany.com ) Description This looks up the addresses of the FAS servers that will hold cached certificates for each UPN. Example 2 PS C:\\> C : \\ PS Import-Module ActiveDirectory C : \\ PS $ users = foreach ( $ user in Get-ADGroupMember MyGroup ) { echo ($user.name + @mycompany.com ) ; } C : \\ PS Get-FasServerForUser -UserPrincipalNames $ users Description This enumerates the UPN addresses of users in \"MyGroup\" and looks up the FAS servers that will hold cached certificates for each. Parameters -UserPrincipalNames Array of UPNs (e.g. user@domain.com) for which to determine FAS addresses. Note that the user accounts do not need to exist in the domain Type : String[] Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet returns the UPNs and associated FAS primary and failover servers Notes Related Links","title":"Get-FasServerForUser"},{"location":"Get-FasServerForUser/#get-fasserverforuser","text":"","title":"Get-FasServerForUser"},{"location":"Get-FasServerForUser/#synopsis","text":"Identify the primary and failover Federated Authentication Server addresses for a UPN.","title":"Synopsis"},{"location":"Get-FasServerForUser/#syntax","text":"Get-FasServerForUser [-UserPrincipalNames String[] ] [ CommonParameters ]","title":"Syntax"},{"location":"Get-FasServerForUser/#description","text":"This cmdlet identifies the addresses of the primary and failover Federated Authentication Server to use for a specified UPN. A deterministic algorithm based on a SHA512 hash of the UPN is used to identify the addresses of two Federated Authentication Service servers, based on configuration in Group Policy. As long as the same Group Policy configuration is applied to all computers, the same addresses will be generated for each user. It's important to note that the explicit UPN should be used. In the cases where an explicit UPN is not set, the implicit UPN should be used. When a user logs in to Storefront the primary FAS server identified by this commandlet will be contacted, followed by the failover FAS server if the primary server is unavailable. If the failover server is also unavailable Storefront will continue to try other FAS servers. This algorithm allows user certificates to be cached in an efficient manner.","title":"Description"},{"location":"Get-FasServerForUser/#examples","text":"","title":"Examples"},{"location":"Get-FasServerForUser/#example-1","text":"PS C:\\> C:\\PS Get-FasServerForUser -UserPrincipalNames @( user1@mycompany.com , user2@mycompany.com ) Description This looks up the addresses of the FAS servers that will hold cached certificates for each UPN.","title":"Example 1"},{"location":"Get-FasServerForUser/#example-2","text":"PS C:\\> C : \\ PS Import-Module ActiveDirectory C : \\ PS $ users = foreach ( $ user in Get-ADGroupMember MyGroup ) { echo ($user.name + @mycompany.com ) ; } C : \\ PS Get-FasServerForUser -UserPrincipalNames $ users Description This enumerates the UPN addresses of users in \"MyGroup\" and looks up the FAS servers that will hold cached certificates for each.","title":"Example 2"},{"location":"Get-FasServerForUser/#parameters","text":"","title":"Parameters"},{"location":"Get-FasServerForUser/#-userprincipalnames","text":"Array of UPNs (e.g. user@domain.com) for which to determine FAS addresses. Note that the user accounts do not need to exist in the domain Type : String[] Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserPrincipalNames"},{"location":"Get-FasServerForUser/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Get-FasServerForUser/#inputs","text":"","title":"Inputs"},{"location":"Get-FasServerForUser/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Get-FasServerForUser/#outputs","text":"","title":"Outputs"},{"location":"Get-FasServerForUser/#void","text":"This cmdlet returns the UPNs and associated FAS primary and failover servers","title":"void"},{"location":"Get-FasServerForUser/#notes","text":"","title":"Notes"},{"location":"Get-FasServerForUser/#related-links","text":"","title":"Related Links"},{"location":"Get-FasUserCertificate/","text":"Get-FasUserCertificate Synopsis List cached certificates on the Federated Authentication Service. Syntax Get-FasUserCertificate [-UserPrincipalName String ] [-Rule String[] ] [-CertificateDefinition String ] [-SecurityContext String ] [-KeyInfo Boolean ] [-MaximumRecordCount Int ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ] Description This command lists the certificates and private keys managed by the Federated Authentication Service. Examples Example 1 PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Get-FasUserCertificate Description This code lists all currently cached certificates on the Federated Authentication Service. Parameters -UserPrincipalName Filter by UPN on certificate. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Rule Filter by Rule name. Type : String[] Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -CertificateDefinition Filter by Certificate Type. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -SecurityContext Filter by Security Context. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -KeyInfo Include private key information in returned cached certificates. Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $false Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -MaximumRecordCount Limit the number of certificates to return. Type : Int Parameter Sets : (All) Aliases : Required : False Position : Named Default value : 250 Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Address Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserName User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Password Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet returns a list of FasUserCertificate object Notes Related Links New-FasUserCertificate Remove-FasUserCertificate","title":"Get-FasUserCertificate"},{"location":"Get-FasUserCertificate/#get-fasusercertificate","text":"","title":"Get-FasUserCertificate"},{"location":"Get-FasUserCertificate/#synopsis","text":"List cached certificates on the Federated Authentication Service.","title":"Synopsis"},{"location":"Get-FasUserCertificate/#syntax","text":"Get-FasUserCertificate [-UserPrincipalName String ] [-Rule String[] ] [-CertificateDefinition String ] [-SecurityContext String ] [-KeyInfo Boolean ] [-MaximumRecordCount Int ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ]","title":"Syntax"},{"location":"Get-FasUserCertificate/#description","text":"This command lists the certificates and private keys managed by the Federated Authentication Service.","title":"Description"},{"location":"Get-FasUserCertificate/#examples","text":"","title":"Examples"},{"location":"Get-FasUserCertificate/#example-1","text":"PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Get-FasUserCertificate Description This code lists all currently cached certificates on the Federated Authentication Service.","title":"Example 1"},{"location":"Get-FasUserCertificate/#parameters","text":"","title":"Parameters"},{"location":"Get-FasUserCertificate/#-userprincipalname","text":"Filter by UPN on certificate. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserPrincipalName"},{"location":"Get-FasUserCertificate/#-rule","text":"Filter by Rule name. Type : String[] Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Rule"},{"location":"Get-FasUserCertificate/#-certificatedefinition","text":"Filter by Certificate Type. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CertificateDefinition"},{"location":"Get-FasUserCertificate/#-securitycontext","text":"Filter by Security Context. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-SecurityContext"},{"location":"Get-FasUserCertificate/#-keyinfo","text":"Include private key information in returned cached certificates. Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $false Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-KeyInfo"},{"location":"Get-FasUserCertificate/#-maximumrecordcount","text":"Limit the number of certificates to return. Type : Int Parameter Sets : (All) Aliases : Required : False Position : Named Default value : 250 Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-MaximumRecordCount"},{"location":"Get-FasUserCertificate/#-address","text":"Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"Get-FasUserCertificate/#-username","text":"User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserName"},{"location":"Get-FasUserCertificate/#-password","text":"Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Password"},{"location":"Get-FasUserCertificate/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Get-FasUserCertificate/#inputs","text":"","title":"Inputs"},{"location":"Get-FasUserCertificate/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Get-FasUserCertificate/#outputs","text":"","title":"Outputs"},{"location":"Get-FasUserCertificate/#void","text":"This cmdlet returns a list of FasUserCertificate object","title":"void"},{"location":"Get-FasUserCertificate/#notes","text":"","title":"Notes"},{"location":"Get-FasUserCertificate/#related-links","text":"New-FasUserCertificate Remove-FasUserCertificate","title":"Related Links"},{"location":"Import-FasAuthorizationCertificateResponse/","text":"Import-FasAuthorizationCertificateResponse Synopsis Import a PKCS7 certificate chain containing an RA certificate issued by a certificate authority. Syntax Import-FasAuthorizationCertificateResponse -Id String -Pkcs7CertificateFile String [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ] Description Import a PKCS7 certificate chain containing the RA certificate issued by a certificate authority. Note that the format of the certificate file must be a DER encoded PKCS7 file including all certificates in the chain. This file format is an option from the \"Copy to File...\" feature of the Microsoft Certificate viewer. Examples Example 1 PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS $Request = New-FasAuthorizationCertificateRequest C:\\PS Import-FasAuthorizationCertificateResponse -Id $Request.Id -Pkcs7CertificateFile .\\ResponseFromCA.p7b Description This code generates a certificate request in $Request. Once issued it imports the PKCS7 response from a file. Parameters -Id This is the GUID representing the FasAuthorizationCertificate Id. See Get-FasAuthorizationCertificate. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (Default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Pkcs7CertificateFile Specify the location of the PKCS7 file (including root and intermediate certificates) Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Address Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserName User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Password Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet does not return a value Notes Related Links New-FasAuthorizationCertificateRequest Get-FasAuthorizationCertificate Remove-FasAuthorizationCertificate","title":"Import-FasAuthorizationCertificateResponse"},{"location":"Import-FasAuthorizationCertificateResponse/#import-fasauthorizationcertificateresponse","text":"","title":"Import-FasAuthorizationCertificateResponse"},{"location":"Import-FasAuthorizationCertificateResponse/#synopsis","text":"Import a PKCS7 certificate chain containing an RA certificate issued by a certificate authority.","title":"Synopsis"},{"location":"Import-FasAuthorizationCertificateResponse/#syntax","text":"Import-FasAuthorizationCertificateResponse -Id String -Pkcs7CertificateFile String [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ]","title":"Syntax"},{"location":"Import-FasAuthorizationCertificateResponse/#description","text":"Import a PKCS7 certificate chain containing the RA certificate issued by a certificate authority. Note that the format of the certificate file must be a DER encoded PKCS7 file including all certificates in the chain. This file format is an option from the \"Copy to File...\" feature of the Microsoft Certificate viewer.","title":"Description"},{"location":"Import-FasAuthorizationCertificateResponse/#examples","text":"","title":"Examples"},{"location":"Import-FasAuthorizationCertificateResponse/#example-1","text":"PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS $Request = New-FasAuthorizationCertificateRequest C:\\PS Import-FasAuthorizationCertificateResponse -Id $Request.Id -Pkcs7CertificateFile .\\ResponseFromCA.p7b Description This code generates a certificate request in $Request. Once issued it imports the PKCS7 response from a file.","title":"Example 1"},{"location":"Import-FasAuthorizationCertificateResponse/#parameters","text":"","title":"Parameters"},{"location":"Import-FasAuthorizationCertificateResponse/#-id","text":"This is the GUID representing the FasAuthorizationCertificate Id. See Get-FasAuthorizationCertificate. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (Default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Id"},{"location":"Import-FasAuthorizationCertificateResponse/#-pkcs7certificatefile","text":"Specify the location of the PKCS7 file (including root and intermediate certificates) Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Pkcs7CertificateFile"},{"location":"Import-FasAuthorizationCertificateResponse/#-address","text":"Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"Import-FasAuthorizationCertificateResponse/#-username","text":"User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserName"},{"location":"Import-FasAuthorizationCertificateResponse/#-password","text":"Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Password"},{"location":"Import-FasAuthorizationCertificateResponse/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Import-FasAuthorizationCertificateResponse/#inputs","text":"","title":"Inputs"},{"location":"Import-FasAuthorizationCertificateResponse/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Import-FasAuthorizationCertificateResponse/#outputs","text":"","title":"Outputs"},{"location":"Import-FasAuthorizationCertificateResponse/#void","text":"This cmdlet does not return a value","title":"void"},{"location":"Import-FasAuthorizationCertificateResponse/#notes","text":"","title":"Notes"},{"location":"Import-FasAuthorizationCertificateResponse/#related-links","text":"New-FasAuthorizationCertificateRequest Get-FasAuthorizationCertificate Remove-FasAuthorizationCertificate","title":"Related Links"},{"location":"New-FasAuthorizationCertificate/","text":"New-FasAuthorizationCertificate Synopsis Request a Registration Authority (or Enrollment Agent) certificate for a Federated Authentication Service. Syntax New-FasAuthorizationCertificate -CertificateAuthority String -CertificateTemplate String [-AuthorizationTemplate String ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ] Description Request a Registration Authority (or Enrollment Agent) certificate for a Federated Authentication Service. The Federated Authentication Service works by dynamically issuing user logon certificates from a Microsoft Certificate Authority. To do this it must first be granted an \"Authorization Certificate\" (often called an RA or Enrollement Agent certificate) to authenticate to the Certificate Authority. This command generates a Certifiate Request and sends it to the specified Certificate Authority to request an Authorization certificate. Examples Example 1 PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS $DefaultCA=(Get-FasMsCertificateAuthority -Default).Address C:\\PS New-FasAuthorizationCertificate -CertificateAuthority $DefaultCA -CertificateTemplate Citrix_RegistrationAuthority -AuthorizationTemplate Citrix_RegistrationAuthority_ManualAuthorization Description This code generates a certificate request for \"Citrix_RegistrationAuthority_ManualAuthorization\" and sends it to the default CA in the domain. Once access is approved by the CA Administrator, a second request for the actual \"Citrix_RegistrationAuthority\" certificate will be issued. Parameters -CertificateAuthority Specify the CertificateTemplate of the Registration Authority certificate (e.g. \"Citrix_RegistrationAuthority\"). Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -AuthorizationTemplate Specify the name of the \"Requires CA Administrator Approval\" Certificate Template (e.g. \"Citrix_RegistrationAuthority_ManualAuthorization\"). Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : CertificateTemplate _ManualAuthorization Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Address Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserName User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Password Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -CertificateTemplate Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet does not return a value Notes Related Links New-FasAuthorizationCertificateRequest Get-FasAuthorizationCertificate Remove-FasAuthorizationCertificate Get-FasMsTemplate Get-FasMsCertificateAuthority","title":"New-FasAuthorizationCertificate"},{"location":"New-FasAuthorizationCertificate/#new-fasauthorizationcertificate","text":"","title":"New-FasAuthorizationCertificate"},{"location":"New-FasAuthorizationCertificate/#synopsis","text":"Request a Registration Authority (or Enrollment Agent) certificate for a Federated Authentication Service.","title":"Synopsis"},{"location":"New-FasAuthorizationCertificate/#syntax","text":"New-FasAuthorizationCertificate -CertificateAuthority String -CertificateTemplate String [-AuthorizationTemplate String ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ]","title":"Syntax"},{"location":"New-FasAuthorizationCertificate/#description","text":"Request a Registration Authority (or Enrollment Agent) certificate for a Federated Authentication Service. The Federated Authentication Service works by dynamically issuing user logon certificates from a Microsoft Certificate Authority. To do this it must first be granted an \"Authorization Certificate\" (often called an RA or Enrollement Agent certificate) to authenticate to the Certificate Authority. This command generates a Certifiate Request and sends it to the specified Certificate Authority to request an Authorization certificate.","title":"Description"},{"location":"New-FasAuthorizationCertificate/#examples","text":"","title":"Examples"},{"location":"New-FasAuthorizationCertificate/#example-1","text":"PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS $DefaultCA=(Get-FasMsCertificateAuthority -Default).Address C:\\PS New-FasAuthorizationCertificate -CertificateAuthority $DefaultCA -CertificateTemplate Citrix_RegistrationAuthority -AuthorizationTemplate Citrix_RegistrationAuthority_ManualAuthorization Description This code generates a certificate request for \"Citrix_RegistrationAuthority_ManualAuthorization\" and sends it to the default CA in the domain. Once access is approved by the CA Administrator, a second request for the actual \"Citrix_RegistrationAuthority\" certificate will be issued.","title":"Example 1"},{"location":"New-FasAuthorizationCertificate/#parameters","text":"","title":"Parameters"},{"location":"New-FasAuthorizationCertificate/#-certificateauthority","text":"Specify the CertificateTemplate of the Registration Authority certificate (e.g. \"Citrix_RegistrationAuthority\"). Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CertificateAuthority"},{"location":"New-FasAuthorizationCertificate/#-authorizationtemplate","text":"Specify the name of the \"Requires CA Administrator Approval\" Certificate Template (e.g. \"Citrix_RegistrationAuthority_ManualAuthorization\"). Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : CertificateTemplate _ManualAuthorization Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-AuthorizationTemplate"},{"location":"New-FasAuthorizationCertificate/#-address","text":"Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"New-FasAuthorizationCertificate/#-username","text":"User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserName"},{"location":"New-FasAuthorizationCertificate/#-password","text":"Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Password"},{"location":"New-FasAuthorizationCertificate/#-certificatetemplate","text":"Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CertificateTemplate"},{"location":"New-FasAuthorizationCertificate/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"New-FasAuthorizationCertificate/#inputs","text":"","title":"Inputs"},{"location":"New-FasAuthorizationCertificate/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"New-FasAuthorizationCertificate/#outputs","text":"","title":"Outputs"},{"location":"New-FasAuthorizationCertificate/#void","text":"This cmdlet does not return a value","title":"void"},{"location":"New-FasAuthorizationCertificate/#notes","text":"","title":"Notes"},{"location":"New-FasAuthorizationCertificate/#related-links","text":"New-FasAuthorizationCertificateRequest Get-FasAuthorizationCertificate Remove-FasAuthorizationCertificate Get-FasMsTemplate Get-FasMsCertificateAuthority","title":"Related Links"},{"location":"New-FasAuthorizationCertificateRequest/","text":"New-FasAuthorizationCertificateRequest Synopsis Generate an offline certificate request for a Registration Authority certificate for a Federated Authentication Service. Once the request is signed import the PKCS7 chain using Import-FasAuthorizationCertificateResponse. Syntax New-FasAuthorizationCertificateRequest [-DistinguishedName String ] [-UseTPM Boolean ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ] Description Generate an offline certificate request a Registration Authority (or Enrollment Agent) certificate for a Federated Authentication Service. Once the request is signed import the PKCS7 chain using Import-FasAuthorizationCertificateResponse. The Federated Authentication Service works by dynamically issuing user logon certificates from a Microsoft Certificate Authority. To do this it must first be granted an \"Authorization Certificate\" (often called an RA or Enrollement Agent certificate) to authenticate to the Certificate Authority. This command generates a Certifiate Request associated it with an FasAuthorizationCertificate and returns a Base64 CSR. Examples Example 1 PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS $Request = New-FasAuthorizationCertificateRequest C:\\PS Import-FasAuthorizationCertificateResponse -Id $Request.Id -Pkcs7CertificateFile .\\ResponseFromCA.p7b Description This code generates a certificate request in $Request. Once issued it imports the PKCS7 response from a file. Parameters -DistinguishedName Specify the Distinguished Name to include in the Certificate Request. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : DC=CitrixTrustFabric Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UseTPM Specify true to generate a private key in the Federated Authentication Service server's Trusted Platform Module. Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $false Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Address Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserName User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Password Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet does not return a value Notes Related Links Import-FasAuthorizationCertificateResponse Get-FasAuthorizationCertificate Remove-FasAuthorizationCertificate","title":"New-FasAuthorizationCertificateRequest"},{"location":"New-FasAuthorizationCertificateRequest/#new-fasauthorizationcertificaterequest","text":"","title":"New-FasAuthorizationCertificateRequest"},{"location":"New-FasAuthorizationCertificateRequest/#synopsis","text":"Generate an offline certificate request for a Registration Authority certificate for a Federated Authentication Service. Once the request is signed import the PKCS7 chain using Import-FasAuthorizationCertificateResponse.","title":"Synopsis"},{"location":"New-FasAuthorizationCertificateRequest/#syntax","text":"New-FasAuthorizationCertificateRequest [-DistinguishedName String ] [-UseTPM Boolean ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ]","title":"Syntax"},{"location":"New-FasAuthorizationCertificateRequest/#description","text":"Generate an offline certificate request a Registration Authority (or Enrollment Agent) certificate for a Federated Authentication Service. Once the request is signed import the PKCS7 chain using Import-FasAuthorizationCertificateResponse. The Federated Authentication Service works by dynamically issuing user logon certificates from a Microsoft Certificate Authority. To do this it must first be granted an \"Authorization Certificate\" (often called an RA or Enrollement Agent certificate) to authenticate to the Certificate Authority. This command generates a Certifiate Request associated it with an FasAuthorizationCertificate and returns a Base64 CSR.","title":"Description"},{"location":"New-FasAuthorizationCertificateRequest/#examples","text":"","title":"Examples"},{"location":"New-FasAuthorizationCertificateRequest/#example-1","text":"PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS $Request = New-FasAuthorizationCertificateRequest C:\\PS Import-FasAuthorizationCertificateResponse -Id $Request.Id -Pkcs7CertificateFile .\\ResponseFromCA.p7b Description This code generates a certificate request in $Request. Once issued it imports the PKCS7 response from a file.","title":"Example 1"},{"location":"New-FasAuthorizationCertificateRequest/#parameters","text":"","title":"Parameters"},{"location":"New-FasAuthorizationCertificateRequest/#-distinguishedname","text":"Specify the Distinguished Name to include in the Certificate Request. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : DC=CitrixTrustFabric Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-DistinguishedName"},{"location":"New-FasAuthorizationCertificateRequest/#-usetpm","text":"Specify true to generate a private key in the Federated Authentication Service server's Trusted Platform Module. Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $false Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UseTPM"},{"location":"New-FasAuthorizationCertificateRequest/#-address","text":"Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"New-FasAuthorizationCertificateRequest/#-username","text":"User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserName"},{"location":"New-FasAuthorizationCertificateRequest/#-password","text":"Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Password"},{"location":"New-FasAuthorizationCertificateRequest/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"New-FasAuthorizationCertificateRequest/#inputs","text":"","title":"Inputs"},{"location":"New-FasAuthorizationCertificateRequest/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"New-FasAuthorizationCertificateRequest/#outputs","text":"","title":"Outputs"},{"location":"New-FasAuthorizationCertificateRequest/#void","text":"This cmdlet does not return a value","title":"void"},{"location":"New-FasAuthorizationCertificateRequest/#notes","text":"","title":"Notes"},{"location":"New-FasAuthorizationCertificateRequest/#related-links","text":"Import-FasAuthorizationCertificateResponse Get-FasAuthorizationCertificate Remove-FasAuthorizationCertificate","title":"Related Links"},{"location":"New-FasCertificateDefinition/","text":"New-FasCertificateDefinition Synopsis Create a Certificate Definition object (recipe for issuing a certificate). Syntax New-FasCertificateDefinition [-Name String ] -CertificateTemplate String -AuthorizationCertificate String -CertificateAuthorities String[] [-PolicyOids String ] [-InSession Boolean ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ] Description Create a Certificate Definition object that the FAS will use to generate types of certificate. When generating a certificate, the FAS requires various pieces of information. Including: - The CertificateTemplate to request (see Get-FasMsTemplate) - A list of loadbalanced/failover Certificate Authority Addresses (see Get-FasMsCertificateAuthority) - A reference to the AuthorizationCertificate to use to Authorize the request (see Get-FasAuthorizationCertificate) - A list of additional Issuance Policy OIDs to add to the certificate request (see Get-FasPolicyOid) - A flag indicating if the certificate can be used as an in-session Virtual Smart Card, or only for the logon process. Note that Certificate Definition objects can only be created and managed by the FAS Server administrator, although they can be referenced by \"Rule\" administrators. Examples Example 1 PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS $DefaultCA=(Get-FasMsCertificateAuthority -Default).Address C:\\PS $AuthorizationCertificate=(Get-FasAuthorizationCertificate)[0].Id C:\\PS New-FasCertificateDefinition -CertificateAuthorities $DefaultCA -MsTemplate Citrix_SmartcardLogon -AuthorizationCertificate $AuthorizationCertificate Description This code generates a certificate definition that uses the first authorization certificate to issue Citrix_SmartcardLogon certificates from the default CA Parameters -Name Specify the name of this Certificate Definition (if not specified, defaults to the CertificateTemplate name) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : [ CertificateTemplate name ] Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -CertificateTemplate Specify the name of Certificate Template to use to issue this certificate Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -AuthorizationCertificate Specify a the Guid Id of an AuthorizationCertificate object Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -CertificateAuthorities Specify a list of Addresses of Certificate Authorities that can issue these certificates Type : String[] Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -PolicyOids Specify a list of Issuance Policy OIDs to request in the certificate Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (empty) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -InSession Set to $FALSE to only allow this certificate to be used for authentication Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $FALSE Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Address Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserName User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Password Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet does not return a value Notes Related Links Get-FasCertificateDefinition Set-FasCertificateDefinition Remove-FasCertificateDefinition Get-FasAuthorizationCertificate Get-FasPolicy Get-FasMsTemplate Get-FasMsCertificateAuthority","title":"New-FasCertificateDefinition"},{"location":"New-FasCertificateDefinition/#new-fascertificatedefinition","text":"","title":"New-FasCertificateDefinition"},{"location":"New-FasCertificateDefinition/#synopsis","text":"Create a Certificate Definition object (recipe for issuing a certificate).","title":"Synopsis"},{"location":"New-FasCertificateDefinition/#syntax","text":"New-FasCertificateDefinition [-Name String ] -CertificateTemplate String -AuthorizationCertificate String -CertificateAuthorities String[] [-PolicyOids String ] [-InSession Boolean ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ]","title":"Syntax"},{"location":"New-FasCertificateDefinition/#description","text":"Create a Certificate Definition object that the FAS will use to generate types of certificate. When generating a certificate, the FAS requires various pieces of information. Including: - The CertificateTemplate to request (see Get-FasMsTemplate) - A list of loadbalanced/failover Certificate Authority Addresses (see Get-FasMsCertificateAuthority) - A reference to the AuthorizationCertificate to use to Authorize the request (see Get-FasAuthorizationCertificate) - A list of additional Issuance Policy OIDs to add to the certificate request (see Get-FasPolicyOid) - A flag indicating if the certificate can be used as an in-session Virtual Smart Card, or only for the logon process. Note that Certificate Definition objects can only be created and managed by the FAS Server administrator, although they can be referenced by \"Rule\" administrators.","title":"Description"},{"location":"New-FasCertificateDefinition/#examples","text":"","title":"Examples"},{"location":"New-FasCertificateDefinition/#example-1","text":"PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS $DefaultCA=(Get-FasMsCertificateAuthority -Default).Address C:\\PS $AuthorizationCertificate=(Get-FasAuthorizationCertificate)[0].Id C:\\PS New-FasCertificateDefinition -CertificateAuthorities $DefaultCA -MsTemplate Citrix_SmartcardLogon -AuthorizationCertificate $AuthorizationCertificate Description This code generates a certificate definition that uses the first authorization certificate to issue Citrix_SmartcardLogon certificates from the default CA","title":"Example 1"},{"location":"New-FasCertificateDefinition/#parameters","text":"","title":"Parameters"},{"location":"New-FasCertificateDefinition/#-name","text":"Specify the name of this Certificate Definition (if not specified, defaults to the CertificateTemplate name) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : [ CertificateTemplate name ] Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Name"},{"location":"New-FasCertificateDefinition/#-certificatetemplate","text":"Specify the name of Certificate Template to use to issue this certificate Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CertificateTemplate"},{"location":"New-FasCertificateDefinition/#-authorizationcertificate","text":"Specify a the Guid Id of an AuthorizationCertificate object Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-AuthorizationCertificate"},{"location":"New-FasCertificateDefinition/#-certificateauthorities","text":"Specify a list of Addresses of Certificate Authorities that can issue these certificates Type : String[] Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CertificateAuthorities"},{"location":"New-FasCertificateDefinition/#-policyoids","text":"Specify a list of Issuance Policy OIDs to request in the certificate Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (empty) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-PolicyOids"},{"location":"New-FasCertificateDefinition/#-insession","text":"Set to $FALSE to only allow this certificate to be used for authentication Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $FALSE Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-InSession"},{"location":"New-FasCertificateDefinition/#-address","text":"Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"New-FasCertificateDefinition/#-username","text":"User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserName"},{"location":"New-FasCertificateDefinition/#-password","text":"Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Password"},{"location":"New-FasCertificateDefinition/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"New-FasCertificateDefinition/#inputs","text":"","title":"Inputs"},{"location":"New-FasCertificateDefinition/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"New-FasCertificateDefinition/#outputs","text":"","title":"Outputs"},{"location":"New-FasCertificateDefinition/#void","text":"This cmdlet does not return a value","title":"void"},{"location":"New-FasCertificateDefinition/#notes","text":"","title":"Notes"},{"location":"New-FasCertificateDefinition/#related-links","text":"Get-FasCertificateDefinition Set-FasCertificateDefinition Remove-FasCertificateDefinition Get-FasAuthorizationCertificate Get-FasPolicy Get-FasMsTemplate Get-FasMsCertificateAuthority","title":"Related Links"},{"location":"New-FasMsTemplate/","text":"New-FasMsTemplate Synopsis Installs a Microsoft Certificate Template file into the current Active Directory environment. Syntax New-FasMsTemplate -FileName String [-Acl String ] [ CommonParameters ] Description Loads a certificate template XML file and installs it to Active Directory, optionally setting a security descriptor. Microsoft Certificate Authority uses Certificate Templates to describe the types of certificates that it can issue. This includes information such as the validity period and how the certificate should be authorized. The Citrix Federated Authentication Service supplies a number of human-readable XML certificate templates that can be reviewed and installed using this commandlet. Alternatively the equivalent templates can be created using the standard Microsoft Certifiate Template Administration tools. By default the ACL placed on the Certificate Template will allow only Domain Administrators to have full control of the installed Certificate Template. If this is not suitable the -Acl \\ SDDL> parameter can be used to specify a security descriptor. Note that this cmdlet must be run using a High Privilege user account. Equivalent configuration can be done manually using the Microsoft GUI tools, or scripted using the CX509CertificateTemplateADWritable COM object in CertEnroll.dll: $template = [System.IO.File]::ReadAllBytes(\"$Pwd\\Citrix_SecureServerRole.certificatetemplate\") $CertEnrol = New-Object -ComObject X509Enrollment.CX509EnrollmentPolicyWebService $CertEnrol.InitializeImport($template) $comtemplate = $CertEnrol.GetTemplates().ItemByIndex(0) $writabletemplate = New-Object -ComObject X509Enrollment.CX509CertificateTemplateADWritable $writabletemplate.Initialize($comtemplate) $writabletemplate.Commit(1, $NULL) Examples Example 1 PS C:\\> C : \\ PS New-FasMsTemplate -FileName ./ Citrix_SmartcardLogon . certificatetemplate -Acl D : PAI ( A ; OICI ; FA ;;; DA ) Description Read the specified certificate template file and install it into Active Directory applying a \"Domain Administrator Full Control\" ACL Parameters -FileName Specifies the .certificatetemplate file to install. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (required) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Acl Specify an ACL to apply to the Certificate Template in SDDL format. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : D:PAI(A;OICI;FA;;;DA) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet does not return a value Notes Related Links Get-FasMsTemplate Publish-FasMsTemplate Unpublish-FasMsTemplate Remove-FasMsTemplate","title":"New-FasMsTemplate"},{"location":"New-FasMsTemplate/#new-fasmstemplate","text":"","title":"New-FasMsTemplate"},{"location":"New-FasMsTemplate/#synopsis","text":"Installs a Microsoft Certificate Template file into the current Active Directory environment.","title":"Synopsis"},{"location":"New-FasMsTemplate/#syntax","text":"New-FasMsTemplate -FileName String [-Acl String ] [ CommonParameters ]","title":"Syntax"},{"location":"New-FasMsTemplate/#description","text":"Loads a certificate template XML file and installs it to Active Directory, optionally setting a security descriptor. Microsoft Certificate Authority uses Certificate Templates to describe the types of certificates that it can issue. This includes information such as the validity period and how the certificate should be authorized. The Citrix Federated Authentication Service supplies a number of human-readable XML certificate templates that can be reviewed and installed using this commandlet. Alternatively the equivalent templates can be created using the standard Microsoft Certifiate Template Administration tools. By default the ACL placed on the Certificate Template will allow only Domain Administrators to have full control of the installed Certificate Template. If this is not suitable the -Acl \\ SDDL> parameter can be used to specify a security descriptor. Note that this cmdlet must be run using a High Privilege user account. Equivalent configuration can be done manually using the Microsoft GUI tools, or scripted using the CX509CertificateTemplateADWritable COM object in CertEnroll.dll: $template = [System.IO.File]::ReadAllBytes(\"$Pwd\\Citrix_SecureServerRole.certificatetemplate\") $CertEnrol = New-Object -ComObject X509Enrollment.CX509EnrollmentPolicyWebService $CertEnrol.InitializeImport($template) $comtemplate = $CertEnrol.GetTemplates().ItemByIndex(0) $writabletemplate = New-Object -ComObject X509Enrollment.CX509CertificateTemplateADWritable $writabletemplate.Initialize($comtemplate) $writabletemplate.Commit(1, $NULL)","title":"Description"},{"location":"New-FasMsTemplate/#examples","text":"","title":"Examples"},{"location":"New-FasMsTemplate/#example-1","text":"PS C:\\> C : \\ PS New-FasMsTemplate -FileName ./ Citrix_SmartcardLogon . certificatetemplate -Acl D : PAI ( A ; OICI ; FA ;;; DA ) Description Read the specified certificate template file and install it into Active Directory applying a \"Domain Administrator Full Control\" ACL","title":"Example 1"},{"location":"New-FasMsTemplate/#parameters","text":"","title":"Parameters"},{"location":"New-FasMsTemplate/#-filename","text":"Specifies the .certificatetemplate file to install. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (required) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-FileName"},{"location":"New-FasMsTemplate/#-acl","text":"Specify an ACL to apply to the Certificate Template in SDDL format. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : D:PAI(A;OICI;FA;;;DA) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Acl"},{"location":"New-FasMsTemplate/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"New-FasMsTemplate/#inputs","text":"","title":"Inputs"},{"location":"New-FasMsTemplate/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"New-FasMsTemplate/#outputs","text":"","title":"Outputs"},{"location":"New-FasMsTemplate/#void","text":"This cmdlet does not return a value","title":"void"},{"location":"New-FasMsTemplate/#notes","text":"","title":"Notes"},{"location":"New-FasMsTemplate/#related-links","text":"Get-FasMsTemplate Publish-FasMsTemplate Unpublish-FasMsTemplate Remove-FasMsTemplate","title":"Related Links"},{"location":"New-FasPolicyOid/","text":"New-FasPolicyOid Synopsis Create and register a new Issuance Policy Oid in the domain. Syntax New-FasPolicyOid -Name String [-Group String ] [ CommonParameters ] Description This cmdlet registers a new Issuance Policy Oid with the domain by name, optionally specifying associated LDAP security group DN. Certificate Issuance Policy Oids are attributes that can optionally be included in certificates issued by the Microsoft Certificate Authority. By default, these include Low/Medium/High Assurance levels and provide an indication of the level or type of approval to which a certificate holder has been authorized. When logging in, Windows will dynamically add the user to additional Universal Security Groups that have been associated with these Oids. Note that this cmdlet must be run using a High Privilege user account. Equivalent configuration can be done manually using the Microsoft LDAP configuration tools. Examples Example 1 PS C:\\> C:\\PS New-FasPolicyOid -Name Finance User Assurance -Group CN=FinanceGroup,CN=Users,DC=citrixtest,DC=net Description This command creates an OID that when included in a logon certificate will dynamically assign the user to the \"FinanceGroup\" Universal Security Group Parameters -Name Specifies the name of the new policy oid to register Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Group Specifies the DN of a Universal Security Group to associate with this Policy OID (or leave $NULL) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet does not return a value Notes Related Links Get-FasPolicyOid Set-FasPolicyOid Remove-FasPolicyOid","title":"New-FasPolicyOid"},{"location":"New-FasPolicyOid/#new-faspolicyoid","text":"","title":"New-FasPolicyOid"},{"location":"New-FasPolicyOid/#synopsis","text":"Create and register a new Issuance Policy Oid in the domain.","title":"Synopsis"},{"location":"New-FasPolicyOid/#syntax","text":"New-FasPolicyOid -Name String [-Group String ] [ CommonParameters ]","title":"Syntax"},{"location":"New-FasPolicyOid/#description","text":"This cmdlet registers a new Issuance Policy Oid with the domain by name, optionally specifying associated LDAP security group DN. Certificate Issuance Policy Oids are attributes that can optionally be included in certificates issued by the Microsoft Certificate Authority. By default, these include Low/Medium/High Assurance levels and provide an indication of the level or type of approval to which a certificate holder has been authorized. When logging in, Windows will dynamically add the user to additional Universal Security Groups that have been associated with these Oids. Note that this cmdlet must be run using a High Privilege user account. Equivalent configuration can be done manually using the Microsoft LDAP configuration tools.","title":"Description"},{"location":"New-FasPolicyOid/#examples","text":"","title":"Examples"},{"location":"New-FasPolicyOid/#example-1","text":"PS C:\\> C:\\PS New-FasPolicyOid -Name Finance User Assurance -Group CN=FinanceGroup,CN=Users,DC=citrixtest,DC=net Description This command creates an OID that when included in a logon certificate will dynamically assign the user to the \"FinanceGroup\" Universal Security Group","title":"Example 1"},{"location":"New-FasPolicyOid/#parameters","text":"","title":"Parameters"},{"location":"New-FasPolicyOid/#-name","text":"Specifies the name of the new policy oid to register Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Name"},{"location":"New-FasPolicyOid/#-group","text":"Specifies the DN of a Universal Security Group to associate with this Policy OID (or leave $NULL) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Group"},{"location":"New-FasPolicyOid/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"New-FasPolicyOid/#inputs","text":"","title":"Inputs"},{"location":"New-FasPolicyOid/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"New-FasPolicyOid/#outputs","text":"","title":"Outputs"},{"location":"New-FasPolicyOid/#void","text":"This cmdlet does not return a value","title":"void"},{"location":"New-FasPolicyOid/#notes","text":"","title":"Notes"},{"location":"New-FasPolicyOid/#related-links","text":"Get-FasPolicyOid Set-FasPolicyOid Remove-FasPolicyOid","title":"Related Links"},{"location":"New-FasRule/","text":"New-FasRule Synopsis Create a Rule object (a named instance of the Federated Authentication Service running on a server). Syntax New-FasRule -Name String -CertificateDefinitions String[] -StoreFrontAcl String [-UserAcl String ] [-VdaAcl String ] [-DelegatedAdministrationAcl Boolean ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ] Description Create a named rule that controls which trusted StoreFront servers can assert logon identities. Normally to log in to a Windows computer the Active Directory Domain Controllers require that \"primary credentials\" be present - that is a password, or a smartcard, etc. An instance of a Federated Authentication Service allows trusted servers to \"assert\" user identities without knowledge of primary credentials. The configuration options are: - The name of the Rule or Service instance. Usually there will be at least one service named \"default\", but further, independent services can be run. - A reference to the certificate definitions used to issue Virtual Smart Card certificates when user identities are asserted. Note that only Certificate Definitions marked \"InSession\" can be used after the logon stage. - A reference to the Virtual Smart Card to use for log on. By default this is the first in the list of Certificate Definitions. - A list of Windows Accounts that are trusted to assert identities for this Rule. For security reasons, this must be chosen very carefully - usually it will be the explicit machine accounts of your StoreFront servers. - A list of Windows User Accounts that can be asserted. Usually this will be restricted to a security group. For example \"ExternalCitrixUserGroup\" - A list of VDA Windows Accounts that can act as relying parties to log users in. For example, \"CitrixVdaMachines\" - A list of administrators who have can modify (but not create or delete) the rule. Examples Example 1 PS C:\\> C : \\ PS $ CitrixFasAddress =( Get-FasServer ) [ 0 ] . Address C : \\ PS $ CertificateDefinition =( Get-FasCertificateDefinition ) [ 0 ] . name C : \\ PS New-FasRule -Name default -CertificateDefinitions @($ CertificateDefinition ) -StoreFrontAcl D : P ( A ; OICI ; CC ;;; DD ) Description This code generates a rule named \"default\" allowing Domain Controllers to assert identities by issuing certificates based on the first installed Certificate Definition Parameters -Name Specify the name of this rule. Usually a rule named \"default\" would be available. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -CertificateDefinitions Specify the a list of CertificateDefinition names for Virtual Smart Cards to create. The first in the list will be used for the log on process. Type : String[] Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -StoreFrontAcl Specify the SDDL Security Descriptor controlling which servers are trusted to assert user identities using this rule. E.g. \"D:P(A;OICI;CC;;;XXXX)\" replacing xxxx with a SID string. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserAcl Specify the SDDL Security Descriptor controlling which user identities can be asserted by this rule. E.g. \"D:P(A;OICI;LC;;;XXXX)\" replacing xxxx with a SID string. Defaults as \"D:P(A;OICI;LC;;;DU)\" for \"Domain Users\" Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : D:P(A;OICI;LC;;;DU) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -VdaAcl Specify the SDDL Security Descriptor controlling which VDAs can be logged into by this rule. E.g. \"D:P(A;OICI;DC;;;XXXX)\" replacing xxxx with a SID string. Defaults as \"D:P(A;OICI;DC;;;DC)\" for \"Domain Computers\" Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : D:P(A;OICI;DC;;;DC) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -DelegatedAdministrationAcl Specify the SDDL Security Descriptor controlling which users can change the configuration of this rule. E.g. \"D:P(A;OICI;SW;;;XXXX)\" replacing xxxx with a SID string. Defaults as \"D:P(A;OICI;SW;;;BA)\" for \"Built-in Administrators\" on the FAS Server. Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : D:P(A;OICI;SW;;;BA) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Address Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserName User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Password Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet does not return a value Notes Related Links Get-FasRule Set-FasRule Remove-FasRule Get-FasCertificateDefinition","title":"New-FasRule"},{"location":"New-FasRule/#new-fasrule","text":"","title":"New-FasRule"},{"location":"New-FasRule/#synopsis","text":"Create a Rule object (a named instance of the Federated Authentication Service running on a server).","title":"Synopsis"},{"location":"New-FasRule/#syntax","text":"New-FasRule -Name String -CertificateDefinitions String[] -StoreFrontAcl String [-UserAcl String ] [-VdaAcl String ] [-DelegatedAdministrationAcl Boolean ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ]","title":"Syntax"},{"location":"New-FasRule/#description","text":"Create a named rule that controls which trusted StoreFront servers can assert logon identities. Normally to log in to a Windows computer the Active Directory Domain Controllers require that \"primary credentials\" be present - that is a password, or a smartcard, etc. An instance of a Federated Authentication Service allows trusted servers to \"assert\" user identities without knowledge of primary credentials. The configuration options are: - The name of the Rule or Service instance. Usually there will be at least one service named \"default\", but further, independent services can be run. - A reference to the certificate definitions used to issue Virtual Smart Card certificates when user identities are asserted. Note that only Certificate Definitions marked \"InSession\" can be used after the logon stage. - A reference to the Virtual Smart Card to use for log on. By default this is the first in the list of Certificate Definitions. - A list of Windows Accounts that are trusted to assert identities for this Rule. For security reasons, this must be chosen very carefully - usually it will be the explicit machine accounts of your StoreFront servers. - A list of Windows User Accounts that can be asserted. Usually this will be restricted to a security group. For example \"ExternalCitrixUserGroup\" - A list of VDA Windows Accounts that can act as relying parties to log users in. For example, \"CitrixVdaMachines\" - A list of administrators who have can modify (but not create or delete) the rule.","title":"Description"},{"location":"New-FasRule/#examples","text":"","title":"Examples"},{"location":"New-FasRule/#example-1","text":"PS C:\\> C : \\ PS $ CitrixFasAddress =( Get-FasServer ) [ 0 ] . Address C : \\ PS $ CertificateDefinition =( Get-FasCertificateDefinition ) [ 0 ] . name C : \\ PS New-FasRule -Name default -CertificateDefinitions @($ CertificateDefinition ) -StoreFrontAcl D : P ( A ; OICI ; CC ;;; DD ) Description This code generates a rule named \"default\" allowing Domain Controllers to assert identities by issuing certificates based on the first installed Certificate Definition","title":"Example 1"},{"location":"New-FasRule/#parameters","text":"","title":"Parameters"},{"location":"New-FasRule/#-name","text":"Specify the name of this rule. Usually a rule named \"default\" would be available. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Name"},{"location":"New-FasRule/#-certificatedefinitions","text":"Specify the a list of CertificateDefinition names for Virtual Smart Cards to create. The first in the list will be used for the log on process. Type : String[] Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CertificateDefinitions"},{"location":"New-FasRule/#-storefrontacl","text":"Specify the SDDL Security Descriptor controlling which servers are trusted to assert user identities using this rule. E.g. \"D:P(A;OICI;CC;;;XXXX)\" replacing xxxx with a SID string. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-StoreFrontAcl"},{"location":"New-FasRule/#-useracl","text":"Specify the SDDL Security Descriptor controlling which user identities can be asserted by this rule. E.g. \"D:P(A;OICI;LC;;;XXXX)\" replacing xxxx with a SID string. Defaults as \"D:P(A;OICI;LC;;;DU)\" for \"Domain Users\" Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : D:P(A;OICI;LC;;;DU) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserAcl"},{"location":"New-FasRule/#-vdaacl","text":"Specify the SDDL Security Descriptor controlling which VDAs can be logged into by this rule. E.g. \"D:P(A;OICI;DC;;;XXXX)\" replacing xxxx with a SID string. Defaults as \"D:P(A;OICI;DC;;;DC)\" for \"Domain Computers\" Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : D:P(A;OICI;DC;;;DC) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-VdaAcl"},{"location":"New-FasRule/#-delegatedadministrationacl","text":"Specify the SDDL Security Descriptor controlling which users can change the configuration of this rule. E.g. \"D:P(A;OICI;SW;;;XXXX)\" replacing xxxx with a SID string. Defaults as \"D:P(A;OICI;SW;;;BA)\" for \"Built-in Administrators\" on the FAS Server. Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : D:P(A;OICI;SW;;;BA) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-DelegatedAdministrationAcl"},{"location":"New-FasRule/#-address","text":"Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"New-FasRule/#-username","text":"User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserName"},{"location":"New-FasRule/#-password","text":"Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Password"},{"location":"New-FasRule/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"New-FasRule/#inputs","text":"","title":"Inputs"},{"location":"New-FasRule/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"New-FasRule/#outputs","text":"","title":"Outputs"},{"location":"New-FasRule/#void","text":"This cmdlet does not return a value","title":"void"},{"location":"New-FasRule/#notes","text":"","title":"Notes"},{"location":"New-FasRule/#related-links","text":"Get-FasRule Set-FasRule Remove-FasRule Get-FasCertificateDefinition","title":"Related Links"},{"location":"New-FasUserCertificate/","text":"New-FasUserCertificate Synopsis Generate and cache a certificate for a user on the Federated Authentication Service. Syntax New-FasUserCertificate -UserPrincipalName String -Rule String[] -CertificateDefinition String [-SecurityContext String ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ] Description This command creates a certificate for a user on the Federated Authentication Service. This can be used for testing purposes, or run at \"off-peak\" times to spread the load of certificate generation that would otherwise happen at user logon. Examples Example 1 PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS New-FasUserCertificate -UserPrincipalName fred@citrixtest.net -Rule default -CertificateDefinition default_Definition Description This code generates and caches a certificate for fred@citrixtest.net. Parameters -UserPrincipalName Specify the UPN of the user for whom this certificate is being generated. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Rule Specify the Rule name (Federated Authentication Service instance) this certificate is associated with. Type : String[] Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -CertificateDefinition Specify the Certificate Definition to use when generating the certificate. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -SecurityContext Specify the Security Context to use when generating the certificate. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Address Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserName User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Password Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet does not return a value Notes Related Links Get-FasUserCertificate Remove-FasUserCertificate","title":"New-FasUserCertificate"},{"location":"New-FasUserCertificate/#new-fasusercertificate","text":"","title":"New-FasUserCertificate"},{"location":"New-FasUserCertificate/#synopsis","text":"Generate and cache a certificate for a user on the Federated Authentication Service.","title":"Synopsis"},{"location":"New-FasUserCertificate/#syntax","text":"New-FasUserCertificate -UserPrincipalName String -Rule String[] -CertificateDefinition String [-SecurityContext String ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ]","title":"Syntax"},{"location":"New-FasUserCertificate/#description","text":"This command creates a certificate for a user on the Federated Authentication Service. This can be used for testing purposes, or run at \"off-peak\" times to spread the load of certificate generation that would otherwise happen at user logon.","title":"Description"},{"location":"New-FasUserCertificate/#examples","text":"","title":"Examples"},{"location":"New-FasUserCertificate/#example-1","text":"PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS New-FasUserCertificate -UserPrincipalName fred@citrixtest.net -Rule default -CertificateDefinition default_Definition Description This code generates and caches a certificate for fred@citrixtest.net.","title":"Example 1"},{"location":"New-FasUserCertificate/#parameters","text":"","title":"Parameters"},{"location":"New-FasUserCertificate/#-userprincipalname","text":"Specify the UPN of the user for whom this certificate is being generated. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserPrincipalName"},{"location":"New-FasUserCertificate/#-rule","text":"Specify the Rule name (Federated Authentication Service instance) this certificate is associated with. Type : String[] Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Rule"},{"location":"New-FasUserCertificate/#-certificatedefinition","text":"Specify the Certificate Definition to use when generating the certificate. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CertificateDefinition"},{"location":"New-FasUserCertificate/#-securitycontext","text":"Specify the Security Context to use when generating the certificate. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-SecurityContext"},{"location":"New-FasUserCertificate/#-address","text":"Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"New-FasUserCertificate/#-username","text":"User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserName"},{"location":"New-FasUserCertificate/#-password","text":"Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Password"},{"location":"New-FasUserCertificate/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"New-FasUserCertificate/#inputs","text":"","title":"Inputs"},{"location":"New-FasUserCertificate/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"New-FasUserCertificate/#outputs","text":"","title":"Outputs"},{"location":"New-FasUserCertificate/#void","text":"This cmdlet does not return a value","title":"void"},{"location":"New-FasUserCertificate/#notes","text":"","title":"Notes"},{"location":"New-FasUserCertificate/#related-links","text":"Get-FasUserCertificate Remove-FasUserCertificate","title":"Related Links"},{"location":"Publish-FasMsTemplate/","text":"Publish-FasMsTemplate Synopsis Publish an installed Microsoft Certificate Template on a Microsoft Certificate Authority. Syntax Publish-FasMsTemplate -Name String -CertificateAuthority String [ CommonParameters ] Description This commandlet authorizes a Microsoft Certificate Authority to issue certificates based on a Microsoft Certificate Template. Microsoft Certificate Authority uses Certificate Templates to describe the types of certificates that it can issue. This includes information such as the validity period and how the certificate should be authorized. Not all Certificate Authorities issue certificates of all types. This commandlet instructs a Certificate Authority to add an installed Certificate Template as a type of certificate that can be issued. Note that this cmdlet must be run using a High Privilege user account. Equivalent configuration can be done manually using the Microsoft GUI tools. Examples Example 1 PS C:\\> C:\\PS $ca = Get-FasMSCertificateAuthority -default C:\\PS Publish-FasMsTemplate -Name Citrix_SmartcardLogon -CertificateAuthority $ca.Address Description Publishes the Citrix_SmartcardLogon template on the certificate authority on dc.citrixtest.net Parameters -Name Specifies the name of the Microsoft Certificate Template to publish. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (required) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -CertificateAuthority Specifies the Certificate Authority that should publish this template. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (required) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet does not return a value Notes Related Links Unpublish-FasMsTemplate Get-FasMsCertificateAuthority","title":"Publish-FasMsTemplate"},{"location":"Publish-FasMsTemplate/#publish-fasmstemplate","text":"","title":"Publish-FasMsTemplate"},{"location":"Publish-FasMsTemplate/#synopsis","text":"Publish an installed Microsoft Certificate Template on a Microsoft Certificate Authority.","title":"Synopsis"},{"location":"Publish-FasMsTemplate/#syntax","text":"Publish-FasMsTemplate -Name String -CertificateAuthority String [ CommonParameters ]","title":"Syntax"},{"location":"Publish-FasMsTemplate/#description","text":"This commandlet authorizes a Microsoft Certificate Authority to issue certificates based on a Microsoft Certificate Template. Microsoft Certificate Authority uses Certificate Templates to describe the types of certificates that it can issue. This includes information such as the validity period and how the certificate should be authorized. Not all Certificate Authorities issue certificates of all types. This commandlet instructs a Certificate Authority to add an installed Certificate Template as a type of certificate that can be issued. Note that this cmdlet must be run using a High Privilege user account. Equivalent configuration can be done manually using the Microsoft GUI tools.","title":"Description"},{"location":"Publish-FasMsTemplate/#examples","text":"","title":"Examples"},{"location":"Publish-FasMsTemplate/#example-1","text":"PS C:\\> C:\\PS $ca = Get-FasMSCertificateAuthority -default C:\\PS Publish-FasMsTemplate -Name Citrix_SmartcardLogon -CertificateAuthority $ca.Address Description Publishes the Citrix_SmartcardLogon template on the certificate authority on dc.citrixtest.net","title":"Example 1"},{"location":"Publish-FasMsTemplate/#parameters","text":"","title":"Parameters"},{"location":"Publish-FasMsTemplate/#-name","text":"Specifies the name of the Microsoft Certificate Template to publish. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (required) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Name"},{"location":"Publish-FasMsTemplate/#-certificateauthority","text":"Specifies the Certificate Authority that should publish this template. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (required) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CertificateAuthority"},{"location":"Publish-FasMsTemplate/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Publish-FasMsTemplate/#inputs","text":"","title":"Inputs"},{"location":"Publish-FasMsTemplate/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Publish-FasMsTemplate/#outputs","text":"","title":"Outputs"},{"location":"Publish-FasMsTemplate/#void","text":"This cmdlet does not return a value","title":"void"},{"location":"Publish-FasMsTemplate/#notes","text":"","title":"Notes"},{"location":"Publish-FasMsTemplate/#related-links","text":"Unpublish-FasMsTemplate Get-FasMsCertificateAuthority","title":"Related Links"},{"location":"Remove-FasAuthorizationCertificate/","text":"Remove-FasAuthorizationCertificate Synopsis This command deletes a FAS Authorization Certificate and associated private key Syntax Remove-FasAuthorizationCertificate -Id String [-DeleteUserCerts Boolean ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ] Description This command deletes a FAS Authorization Certificate and associated private key. Note that this may affect the operation of the FAS server. Examples Example 1 PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Remove-FasAuthorizationCertificate -Id (Get-FasAuthorizationCertificate)[0].Id Description This code lists the Authorization certificates on a FAS server and deletes the first one in the list. Parameters -Id Guid of the Authorization Certificate to delete Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -DeleteUserCerts Flag to indicate if the user certificates should also be deleted Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $TRUE Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserName User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Password Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Address Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet does not return a value Notes Related Links New-FasAuthorizationCertificate Get-FasAuthorizationCertificate","title":"Remove-FasAuthorizationCertificate"},{"location":"Remove-FasAuthorizationCertificate/#remove-fasauthorizationcertificate","text":"","title":"Remove-FasAuthorizationCertificate"},{"location":"Remove-FasAuthorizationCertificate/#synopsis","text":"This command deletes a FAS Authorization Certificate and associated private key","title":"Synopsis"},{"location":"Remove-FasAuthorizationCertificate/#syntax","text":"Remove-FasAuthorizationCertificate -Id String [-DeleteUserCerts Boolean ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ]","title":"Syntax"},{"location":"Remove-FasAuthorizationCertificate/#description","text":"This command deletes a FAS Authorization Certificate and associated private key. Note that this may affect the operation of the FAS server.","title":"Description"},{"location":"Remove-FasAuthorizationCertificate/#examples","text":"","title":"Examples"},{"location":"Remove-FasAuthorizationCertificate/#example-1","text":"PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Remove-FasAuthorizationCertificate -Id (Get-FasAuthorizationCertificate)[0].Id Description This code lists the Authorization certificates on a FAS server and deletes the first one in the list.","title":"Example 1"},{"location":"Remove-FasAuthorizationCertificate/#parameters","text":"","title":"Parameters"},{"location":"Remove-FasAuthorizationCertificate/#-id","text":"Guid of the Authorization Certificate to delete Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Id"},{"location":"Remove-FasAuthorizationCertificate/#-deleteusercerts","text":"Flag to indicate if the user certificates should also be deleted Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $TRUE Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-DeleteUserCerts"},{"location":"Remove-FasAuthorizationCertificate/#-username","text":"User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserName"},{"location":"Remove-FasAuthorizationCertificate/#-password","text":"Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Password"},{"location":"Remove-FasAuthorizationCertificate/#-address","text":"Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"Remove-FasAuthorizationCertificate/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Remove-FasAuthorizationCertificate/#inputs","text":"","title":"Inputs"},{"location":"Remove-FasAuthorizationCertificate/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Remove-FasAuthorizationCertificate/#outputs","text":"","title":"Outputs"},{"location":"Remove-FasAuthorizationCertificate/#void","text":"This cmdlet does not return a value","title":"void"},{"location":"Remove-FasAuthorizationCertificate/#notes","text":"","title":"Notes"},{"location":"Remove-FasAuthorizationCertificate/#related-links","text":"New-FasAuthorizationCertificate Get-FasAuthorizationCertificate","title":"Related Links"},{"location":"Remove-FasCertificateDefinition/","text":"Remove-FasCertificateDefinition Synopsis Delete a Certificate Definition Object. Syntax Remove-FasCertificateDefinition [-Name String ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ] Description Delete a Certificate Definition Object. The FAS server will no longer be able to issue certificates of this type. Note that Certificate Definition objects can only be created and managed by the FAS Server administrator, although they can be referenced by \"Rule\" administrators. Examples Example 1 PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Remove-FasCertificateDefinition -Name (Get-FasCertificateDefinition)[0].Name Description Lists the Certificate Definition objects for certificates that are being generated by the FAS Server, and deletes the first entry. Parameters -Name Specify the name of the Certificate Definition to delete. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Address Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserName User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Password Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet does not return a value Notes Related Links New-FasCertificateDefinition Set-FasCertificateDefinition Remove-FasCertificateDefinition","title":"Remove-FasCertificateDefinition"},{"location":"Remove-FasCertificateDefinition/#remove-fascertificatedefinition","text":"","title":"Remove-FasCertificateDefinition"},{"location":"Remove-FasCertificateDefinition/#synopsis","text":"Delete a Certificate Definition Object.","title":"Synopsis"},{"location":"Remove-FasCertificateDefinition/#syntax","text":"Remove-FasCertificateDefinition [-Name String ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ]","title":"Syntax"},{"location":"Remove-FasCertificateDefinition/#description","text":"Delete a Certificate Definition Object. The FAS server will no longer be able to issue certificates of this type. Note that Certificate Definition objects can only be created and managed by the FAS Server administrator, although they can be referenced by \"Rule\" administrators.","title":"Description"},{"location":"Remove-FasCertificateDefinition/#examples","text":"","title":"Examples"},{"location":"Remove-FasCertificateDefinition/#example-1","text":"PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Remove-FasCertificateDefinition -Name (Get-FasCertificateDefinition)[0].Name Description Lists the Certificate Definition objects for certificates that are being generated by the FAS Server, and deletes the first entry.","title":"Example 1"},{"location":"Remove-FasCertificateDefinition/#parameters","text":"","title":"Parameters"},{"location":"Remove-FasCertificateDefinition/#-name","text":"Specify the name of the Certificate Definition to delete. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Name"},{"location":"Remove-FasCertificateDefinition/#-address","text":"Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"Remove-FasCertificateDefinition/#-username","text":"User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserName"},{"location":"Remove-FasCertificateDefinition/#-password","text":"Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Password"},{"location":"Remove-FasCertificateDefinition/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Remove-FasCertificateDefinition/#inputs","text":"","title":"Inputs"},{"location":"Remove-FasCertificateDefinition/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Remove-FasCertificateDefinition/#outputs","text":"","title":"Outputs"},{"location":"Remove-FasCertificateDefinition/#void","text":"This cmdlet does not return a value","title":"void"},{"location":"Remove-FasCertificateDefinition/#notes","text":"","title":"Notes"},{"location":"Remove-FasCertificateDefinition/#related-links","text":"New-FasCertificateDefinition Set-FasCertificateDefinition Remove-FasCertificateDefinition","title":"Related Links"},{"location":"Remove-FasMsTemplate/","text":"Remove-FasMsTemplate Synopsis Uninstall a Microsoft Certificate Template from an Active Directory environment. Syntax Remove-FasMsTemplate -Name String [ CommonParameters ] Description This commandlet can be used to delete Microsoft Certificate Templates currently installed in an Active Directory Deployment. If the template is currently published on a Certificate Authority, running this command will unpublish it. Microsoft Certificate Authority uses Certificate Templates to describe the types of certificates that it can issue. This includes information such as the validity period and how the certificate should be authorized. Note that this cmdlet must be run using a High Privilege user account. Equivalent configuration can be done manually using the Microsoft GUI tools. Examples Example 1 PS C:\\> C:\\PS Remove-FasMsTemplate -Name Citrix_SmartcardLogon Description Deletes the Citrix_SmartcardLogon Certificate Template from Active Directory Parameters -Name Specifies the name of the Microsoft Certificate Template to delete. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (required) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet returns a list of certificate templates. Notes Related Links New-FasMsTemplate Get-FasMsTemplate Publish-FasMsTemplate Unpublish-FasMsTemplate","title":"Remove-FasMsTemplate"},{"location":"Remove-FasMsTemplate/#remove-fasmstemplate","text":"","title":"Remove-FasMsTemplate"},{"location":"Remove-FasMsTemplate/#synopsis","text":"Uninstall a Microsoft Certificate Template from an Active Directory environment.","title":"Synopsis"},{"location":"Remove-FasMsTemplate/#syntax","text":"Remove-FasMsTemplate -Name String [ CommonParameters ]","title":"Syntax"},{"location":"Remove-FasMsTemplate/#description","text":"This commandlet can be used to delete Microsoft Certificate Templates currently installed in an Active Directory Deployment. If the template is currently published on a Certificate Authority, running this command will unpublish it. Microsoft Certificate Authority uses Certificate Templates to describe the types of certificates that it can issue. This includes information such as the validity period and how the certificate should be authorized. Note that this cmdlet must be run using a High Privilege user account. Equivalent configuration can be done manually using the Microsoft GUI tools.","title":"Description"},{"location":"Remove-FasMsTemplate/#examples","text":"","title":"Examples"},{"location":"Remove-FasMsTemplate/#example-1","text":"PS C:\\> C:\\PS Remove-FasMsTemplate -Name Citrix_SmartcardLogon Description Deletes the Citrix_SmartcardLogon Certificate Template from Active Directory","title":"Example 1"},{"location":"Remove-FasMsTemplate/#parameters","text":"","title":"Parameters"},{"location":"Remove-FasMsTemplate/#-name","text":"Specifies the name of the Microsoft Certificate Template to delete. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (required) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Name"},{"location":"Remove-FasMsTemplate/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Remove-FasMsTemplate/#inputs","text":"","title":"Inputs"},{"location":"Remove-FasMsTemplate/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Remove-FasMsTemplate/#outputs","text":"","title":"Outputs"},{"location":"Remove-FasMsTemplate/#void","text":"This cmdlet returns a list of certificate templates.","title":"void"},{"location":"Remove-FasMsTemplate/#notes","text":"","title":"Notes"},{"location":"Remove-FasMsTemplate/#related-links","text":"New-FasMsTemplate Get-FasMsTemplate Publish-FasMsTemplate Unpublish-FasMsTemplate","title":"Related Links"},{"location":"Remove-FasPolicyOid/","text":"Remove-FasPolicyOid Synopsis Remove a registered Issuance Policy Oid in the domain. Syntax Remove-FasPolicyOid -Path String [ CommonParameters ] Description This cmdlet removes an existing Issuance Policy Oid registered in the domain. Note that this cmdlet must be run using a High Privilege user account. Equivalent configuration can be done manually using the Microsoft LDAP configuration tools. Examples Example 1 PS C:\\> C:\\PS $PolicyOid=Get-FasPolicyOid -Name Finance User Assurance C:\\PS Remove-FasPolicyOid -Path $PolicyOid.Path Description This code looks up the LDAP Path of the \"Finance User Assurance\" OID and deletes it. Parameters -Path Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet does not return a value Notes Related Links New-FasPolicyOid Get-FasPolicyOid Set-FasPolicyOid","title":"Remove-FasPolicyOid"},{"location":"Remove-FasPolicyOid/#remove-faspolicyoid","text":"","title":"Remove-FasPolicyOid"},{"location":"Remove-FasPolicyOid/#synopsis","text":"Remove a registered Issuance Policy Oid in the domain.","title":"Synopsis"},{"location":"Remove-FasPolicyOid/#syntax","text":"Remove-FasPolicyOid -Path String [ CommonParameters ]","title":"Syntax"},{"location":"Remove-FasPolicyOid/#description","text":"This cmdlet removes an existing Issuance Policy Oid registered in the domain. Note that this cmdlet must be run using a High Privilege user account. Equivalent configuration can be done manually using the Microsoft LDAP configuration tools.","title":"Description"},{"location":"Remove-FasPolicyOid/#examples","text":"","title":"Examples"},{"location":"Remove-FasPolicyOid/#example-1","text":"PS C:\\> C:\\PS $PolicyOid=Get-FasPolicyOid -Name Finance User Assurance C:\\PS Remove-FasPolicyOid -Path $PolicyOid.Path Description This code looks up the LDAP Path of the \"Finance User Assurance\" OID and deletes it.","title":"Example 1"},{"location":"Remove-FasPolicyOid/#parameters","text":"","title":"Parameters"},{"location":"Remove-FasPolicyOid/#-path","text":"Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Path"},{"location":"Remove-FasPolicyOid/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Remove-FasPolicyOid/#inputs","text":"","title":"Inputs"},{"location":"Remove-FasPolicyOid/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Remove-FasPolicyOid/#outputs","text":"","title":"Outputs"},{"location":"Remove-FasPolicyOid/#void","text":"This cmdlet does not return a value","title":"void"},{"location":"Remove-FasPolicyOid/#notes","text":"","title":"Notes"},{"location":"Remove-FasPolicyOid/#related-links","text":"New-FasPolicyOid Get-FasPolicyOid Set-FasPolicyOid","title":"Related Links"},{"location":"Remove-FasRule/","text":"Remove-FasRule Synopsis Delete a rule configured on the FAS server. Syntax Remove-FasRule -Name String [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ] Description Delete a rule configured on the FAS server. The rule will no longer be available to issue certificates. Normally to log in to a Windows computer the Active Directory Domain Controllers require that \"primary credentials\" be present - that is a password, or a smartcard, etc. An instance of a Federated Authentication Service allows trusted servers to \"assert\" user identities without knowledge of primary credentials. The configuration options are: - The name of the Rule or Service instance. Usually there will be at least one service named \"default\", but further, independent services can be run. - A reference to the certificate definitions used to issue Virtual Smart Card certificates when user identities are asserted. Note that only Certificate Definitions marked \"InSession\" can be used after the logon stage. - A reference to the Virtual Smart Card to use for log on. By default this is the first in the list of Certificate Definitions. - A list of Windows Accounts that are trusted to assert identities for this Rule. For security reasons, this must be chosen very carefully - usually it will be the explicit machine accounts of your StoreFront servers. - A list of Windows User Accounts that can be asserted. Usually this will be restricted to a security group. For example \"ExternalCitrixUserGroup\" - A list of VDA Windows Accounts that can act as relying parties to log users in. For example, \"CitrixVdaMachines\" - A list of administrators who have can modify (but not create or delete) the rule. This command can only be called by FAS Administrators (built-in Administrator group of FAS server). Examples Example 1 PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Remove-FasRule -Name (Get-FasRule)[0].name Description This code deletes the first Rule configured on the Federated Authentication Service Parameters -Name Specify the name of the rule to delete. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Address Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserName User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Password Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet does not return a value Notes Related Links New-FasRule Set-FasRule Get-FasRule","title":"Remove-FasRule"},{"location":"Remove-FasRule/#remove-fasrule","text":"","title":"Remove-FasRule"},{"location":"Remove-FasRule/#synopsis","text":"Delete a rule configured on the FAS server.","title":"Synopsis"},{"location":"Remove-FasRule/#syntax","text":"Remove-FasRule -Name String [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ]","title":"Syntax"},{"location":"Remove-FasRule/#description","text":"Delete a rule configured on the FAS server. The rule will no longer be available to issue certificates. Normally to log in to a Windows computer the Active Directory Domain Controllers require that \"primary credentials\" be present - that is a password, or a smartcard, etc. An instance of a Federated Authentication Service allows trusted servers to \"assert\" user identities without knowledge of primary credentials. The configuration options are: - The name of the Rule or Service instance. Usually there will be at least one service named \"default\", but further, independent services can be run. - A reference to the certificate definitions used to issue Virtual Smart Card certificates when user identities are asserted. Note that only Certificate Definitions marked \"InSession\" can be used after the logon stage. - A reference to the Virtual Smart Card to use for log on. By default this is the first in the list of Certificate Definitions. - A list of Windows Accounts that are trusted to assert identities for this Rule. For security reasons, this must be chosen very carefully - usually it will be the explicit machine accounts of your StoreFront servers. - A list of Windows User Accounts that can be asserted. Usually this will be restricted to a security group. For example \"ExternalCitrixUserGroup\" - A list of VDA Windows Accounts that can act as relying parties to log users in. For example, \"CitrixVdaMachines\" - A list of administrators who have can modify (but not create or delete) the rule. This command can only be called by FAS Administrators (built-in Administrator group of FAS server).","title":"Description"},{"location":"Remove-FasRule/#examples","text":"","title":"Examples"},{"location":"Remove-FasRule/#example-1","text":"PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Remove-FasRule -Name (Get-FasRule)[0].name Description This code deletes the first Rule configured on the Federated Authentication Service","title":"Example 1"},{"location":"Remove-FasRule/#parameters","text":"","title":"Parameters"},{"location":"Remove-FasRule/#-name","text":"Specify the name of the rule to delete. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Name"},{"location":"Remove-FasRule/#-address","text":"Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"Remove-FasRule/#-username","text":"User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserName"},{"location":"Remove-FasRule/#-password","text":"Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Password"},{"location":"Remove-FasRule/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Remove-FasRule/#inputs","text":"","title":"Inputs"},{"location":"Remove-FasRule/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Remove-FasRule/#outputs","text":"","title":"Outputs"},{"location":"Remove-FasRule/#void","text":"This cmdlet does not return a value","title":"void"},{"location":"Remove-FasRule/#notes","text":"","title":"Notes"},{"location":"Remove-FasRule/#related-links","text":"New-FasRule Set-FasRule Get-FasRule","title":"Related Links"},{"location":"Remove-FasUserCertificate/","text":"Remove-FasUserCertificate Synopsis Remove cached certificates on the Federated Authentication Service. Syntax Remove-FasUserCertificate [-UserPrincipalName String ] [-Rule String[] ] [-CertificateDefinition String ] [-SecurityContext String ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ] Description This command deletes certificates and private keys managed by the Federated Authentication Service. This may affect users who are currently using Virtual Smart Cards as the private key will be immediately unavailable. The Federated Authentication Service will automatically remove certificates when they have expire, so it is unusually not necessary to explicitly delete them. Note that this command does not itself prevent equivalent certificates being regenerated when the user next logs in, nor does it revoke certificates that are currently in use. Examples Example 1 PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Remove-FasUserCertificate -UserPrincipalName fred@citrixtest.net Description This code immediately deletes all certificates and private keys associated with certificates issued to fred@citrixtest.net. Parameters -UserPrincipalName Filter by UPN on certificate. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Rule Filter by Rule name. Type : String[] Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -CertificateDefinition Filter by Certificate Type. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -SecurityContext Filter by Security Context. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Address Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserName User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Password Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet returns a list of FasUserCertificate object Notes Related Links New-FasUserCertificate Get-FasUserCertificate","title":"Remove-FasUserCertificate"},{"location":"Remove-FasUserCertificate/#remove-fasusercertificate","text":"","title":"Remove-FasUserCertificate"},{"location":"Remove-FasUserCertificate/#synopsis","text":"Remove cached certificates on the Federated Authentication Service.","title":"Synopsis"},{"location":"Remove-FasUserCertificate/#syntax","text":"Remove-FasUserCertificate [-UserPrincipalName String ] [-Rule String[] ] [-CertificateDefinition String ] [-SecurityContext String ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ]","title":"Syntax"},{"location":"Remove-FasUserCertificate/#description","text":"This command deletes certificates and private keys managed by the Federated Authentication Service. This may affect users who are currently using Virtual Smart Cards as the private key will be immediately unavailable. The Federated Authentication Service will automatically remove certificates when they have expire, so it is unusually not necessary to explicitly delete them. Note that this command does not itself prevent equivalent certificates being regenerated when the user next logs in, nor does it revoke certificates that are currently in use.","title":"Description"},{"location":"Remove-FasUserCertificate/#examples","text":"","title":"Examples"},{"location":"Remove-FasUserCertificate/#example-1","text":"PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Remove-FasUserCertificate -UserPrincipalName fred@citrixtest.net Description This code immediately deletes all certificates and private keys associated with certificates issued to fred@citrixtest.net.","title":"Example 1"},{"location":"Remove-FasUserCertificate/#parameters","text":"","title":"Parameters"},{"location":"Remove-FasUserCertificate/#-userprincipalname","text":"Filter by UPN on certificate. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserPrincipalName"},{"location":"Remove-FasUserCertificate/#-rule","text":"Filter by Rule name. Type : String[] Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Rule"},{"location":"Remove-FasUserCertificate/#-certificatedefinition","text":"Filter by Certificate Type. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CertificateDefinition"},{"location":"Remove-FasUserCertificate/#-securitycontext","text":"Filter by Security Context. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-SecurityContext"},{"location":"Remove-FasUserCertificate/#-address","text":"Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"Remove-FasUserCertificate/#-username","text":"User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserName"},{"location":"Remove-FasUserCertificate/#-password","text":"Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Password"},{"location":"Remove-FasUserCertificate/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Remove-FasUserCertificate/#inputs","text":"","title":"Inputs"},{"location":"Remove-FasUserCertificate/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Remove-FasUserCertificate/#outputs","text":"","title":"Outputs"},{"location":"Remove-FasUserCertificate/#void","text":"This cmdlet returns a list of FasUserCertificate object","title":"void"},{"location":"Remove-FasUserCertificate/#notes","text":"","title":"Notes"},{"location":"Remove-FasUserCertificate/#related-links","text":"New-FasUserCertificate Get-FasUserCertificate","title":"Related Links"},{"location":"Set-FasAdministrationPolicy/","text":"Set-FasAdministrationPolicy Synopsis Sets the local administration policy for the Federated Authentication Service (FAS). Syntax Set-FasAdministrationPolicy [-DefaultToLocalhost Boolean ] [-CheckAddressAgainstGpo Boolean ] [ CommonParameters ] Description This cmdlet sets the local administration policy for the Federated Authentication Service (FAS). Examples Example 1 PS C:\\> C:\\PS Set-FasAdministrationPolicy -DefaultToLocalhost $true -CheckAddressAgainstGpo $false Description This code will cause FAS cmdlets which take an optional Address parameter to default to localhost if no address is supplied. If an address is supplied, FAS cmdlets will not check the address is present in the GPO. Parameters -DefaultToLocalhost Default to localhost. Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -CheckAddressAgainstGpo Check the address is present in the FAS GPO. Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs Notes Related Links Get-FasAdministrationPolicy","title":"Set-FasAdministrationPolicy"},{"location":"Set-FasAdministrationPolicy/#set-fasadministrationpolicy","text":"","title":"Set-FasAdministrationPolicy"},{"location":"Set-FasAdministrationPolicy/#synopsis","text":"Sets the local administration policy for the Federated Authentication Service (FAS).","title":"Synopsis"},{"location":"Set-FasAdministrationPolicy/#syntax","text":"Set-FasAdministrationPolicy [-DefaultToLocalhost Boolean ] [-CheckAddressAgainstGpo Boolean ] [ CommonParameters ]","title":"Syntax"},{"location":"Set-FasAdministrationPolicy/#description","text":"This cmdlet sets the local administration policy for the Federated Authentication Service (FAS).","title":"Description"},{"location":"Set-FasAdministrationPolicy/#examples","text":"","title":"Examples"},{"location":"Set-FasAdministrationPolicy/#example-1","text":"PS C:\\> C:\\PS Set-FasAdministrationPolicy -DefaultToLocalhost $true -CheckAddressAgainstGpo $false Description This code will cause FAS cmdlets which take an optional Address parameter to default to localhost if no address is supplied. If an address is supplied, FAS cmdlets will not check the address is present in the GPO.","title":"Example 1"},{"location":"Set-FasAdministrationPolicy/#parameters","text":"","title":"Parameters"},{"location":"Set-FasAdministrationPolicy/#-defaulttolocalhost","text":"Default to localhost. Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-DefaultToLocalhost"},{"location":"Set-FasAdministrationPolicy/#-checkaddressagainstgpo","text":"Check the address is present in the FAS GPO. Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CheckAddressAgainstGpo"},{"location":"Set-FasAdministrationPolicy/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Set-FasAdministrationPolicy/#inputs","text":"","title":"Inputs"},{"location":"Set-FasAdministrationPolicy/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Set-FasAdministrationPolicy/#outputs","text":"","title":"Outputs"},{"location":"Set-FasAdministrationPolicy/#notes","text":"","title":"Notes"},{"location":"Set-FasAdministrationPolicy/#related-links","text":"Get-FasAdministrationPolicy","title":"Related Links"},{"location":"Set-FasCertificateDefinition/","text":"Set-FasCertificateDefinition Synopsis Modify an existing Certificate Definition object (recipe for issuing a certificate). Syntax Set-FasCertificateDefinition -Name String [-CertificateTemplate String ] [-AuthorizationCertificate String ] [-CertificateAuthorities String[] ] [-PolicyOids String ] [-InSession Boolean ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ] Description Change the confiration of an existing Certificate Definition object that the FAS is using to generate certificates. When generating a certificate, the FAS requires various pieces of information. Including: - The CertificateTemplate to request (see Get-FasMsTemplate) - A list of loadbalanced/failover Certificate Authority Addresses (see Get-FasMsCertificateAuthority) - A reference to the AuthorizationCertificate to use to Authorize the request (see Get-FasAuthorizationCertificate) - A list of additional Issuance Policy OIDs to add to the certificate request (see Get-FasPolicyOid) - A flag indicating if the certificate can be used as an in-session Virtual Smart Card, or only for the logon process. Note that Certificate Definition objects can only be created and managed by the FAS Server administrator, although they can be referenced by \"Rule\" administrators. Examples Example 1 PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS $DefaultCA=(Get-FasMsCertificateAuthority -Default).Address C:\\PS $AuthorizationCertificate=(Get-FasAuthorizationCertificate)[0].Id C:\\PS Set-FasCertificateDefinition -Name MyCertificateDefinition -CertificateAuthorities $DefaultCA -MsTemplate Citrix_SmartcardLogon -AuthorizationCertificate $AuthorizationCertificate Description Updates an existing certificate definition to use the first authorization certificate to issue Citrix_SmartcardLogon certificates from the default CA Parameters -Name Specify the name of the certificate definition to modify Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -CertificateTemplate Change the name of Certificate Template to use to issue this certificate Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -AuthorizationCertificate Change a the Guid Id of an AuthorizationCertificate object Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -CertificateAuthorities Change the list of Addresses of Certificate Authorities that can issue these certificates Type : String[] Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -PolicyOids Change the list of Issuance Policy OIDs to request in the certificate Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (empty) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -InSession Set to $FALSE to only allow this certificate to be used for authentication Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Address Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserName User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Password Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet does not return a value Notes Related Links New-FasCertificateDefinition Get-FasCertificateDefinition Remove-FasCertificateDefinition","title":"Set-FasCertificateDefinition"},{"location":"Set-FasCertificateDefinition/#set-fascertificatedefinition","text":"","title":"Set-FasCertificateDefinition"},{"location":"Set-FasCertificateDefinition/#synopsis","text":"Modify an existing Certificate Definition object (recipe for issuing a certificate).","title":"Synopsis"},{"location":"Set-FasCertificateDefinition/#syntax","text":"Set-FasCertificateDefinition -Name String [-CertificateTemplate String ] [-AuthorizationCertificate String ] [-CertificateAuthorities String[] ] [-PolicyOids String ] [-InSession Boolean ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ]","title":"Syntax"},{"location":"Set-FasCertificateDefinition/#description","text":"Change the confiration of an existing Certificate Definition object that the FAS is using to generate certificates. When generating a certificate, the FAS requires various pieces of information. Including: - The CertificateTemplate to request (see Get-FasMsTemplate) - A list of loadbalanced/failover Certificate Authority Addresses (see Get-FasMsCertificateAuthority) - A reference to the AuthorizationCertificate to use to Authorize the request (see Get-FasAuthorizationCertificate) - A list of additional Issuance Policy OIDs to add to the certificate request (see Get-FasPolicyOid) - A flag indicating if the certificate can be used as an in-session Virtual Smart Card, or only for the logon process. Note that Certificate Definition objects can only be created and managed by the FAS Server administrator, although they can be referenced by \"Rule\" administrators.","title":"Description"},{"location":"Set-FasCertificateDefinition/#examples","text":"","title":"Examples"},{"location":"Set-FasCertificateDefinition/#example-1","text":"PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS $DefaultCA=(Get-FasMsCertificateAuthority -Default).Address C:\\PS $AuthorizationCertificate=(Get-FasAuthorizationCertificate)[0].Id C:\\PS Set-FasCertificateDefinition -Name MyCertificateDefinition -CertificateAuthorities $DefaultCA -MsTemplate Citrix_SmartcardLogon -AuthorizationCertificate $AuthorizationCertificate Description Updates an existing certificate definition to use the first authorization certificate to issue Citrix_SmartcardLogon certificates from the default CA","title":"Example 1"},{"location":"Set-FasCertificateDefinition/#parameters","text":"","title":"Parameters"},{"location":"Set-FasCertificateDefinition/#-name","text":"Specify the name of the certificate definition to modify Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Name"},{"location":"Set-FasCertificateDefinition/#-certificatetemplate","text":"Change the name of Certificate Template to use to issue this certificate Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CertificateTemplate"},{"location":"Set-FasCertificateDefinition/#-authorizationcertificate","text":"Change a the Guid Id of an AuthorizationCertificate object Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-AuthorizationCertificate"},{"location":"Set-FasCertificateDefinition/#-certificateauthorities","text":"Change the list of Addresses of Certificate Authorities that can issue these certificates Type : String[] Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CertificateAuthorities"},{"location":"Set-FasCertificateDefinition/#-policyoids","text":"Change the list of Issuance Policy OIDs to request in the certificate Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (empty) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-PolicyOids"},{"location":"Set-FasCertificateDefinition/#-insession","text":"Set to $FALSE to only allow this certificate to be used for authentication Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-InSession"},{"location":"Set-FasCertificateDefinition/#-address","text":"Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"Set-FasCertificateDefinition/#-username","text":"User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserName"},{"location":"Set-FasCertificateDefinition/#-password","text":"Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Password"},{"location":"Set-FasCertificateDefinition/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Set-FasCertificateDefinition/#inputs","text":"","title":"Inputs"},{"location":"Set-FasCertificateDefinition/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Set-FasCertificateDefinition/#outputs","text":"","title":"Outputs"},{"location":"Set-FasCertificateDefinition/#void","text":"This cmdlet does not return a value","title":"void"},{"location":"Set-FasCertificateDefinition/#notes","text":"","title":"Notes"},{"location":"Set-FasCertificateDefinition/#related-links","text":"New-FasCertificateDefinition Get-FasCertificateDefinition Remove-FasCertificateDefinition","title":"Related Links"},{"location":"Set-FasPolicyOid/","text":"Set-FasPolicyOid Synopsis Change the Universal Security Group associated with an Issuance Policy Oid registered in the domain. Syntax Set-FasPolicyOid -Path String -Group String [ CommonParameters ] Description This cmdlet modifies the security group associated with a new Issuance Policy Oid registered in the domain by name. Certificate Issuance Policy Oids are attributes that can optionally be included in certificates issued by the Microsoft Certificate Authority. By default, these include Low/Medium/High Assurance levels and provide an indication of the level or type of approval to which a certificate holder has been authorized. When logging in, Windows will dynamically add the user to additional Universal Security Groups that have been associated with these Oids. Note that this cmdlet must be run using a High Privilege user account. Equivalent configuration can be done manually using the Microsoft LDAP configuration tools. Examples Example 1 PS C:\\> C:\\PS $PolicyOid=Get-FasPolicyOid -Name Finance User Assurance C:\\PS Set-FasPolicyOid -Path $PolicyOid.Path -Group CN=FinanceGroup,CN=Users,DC=citrixtest,DC=net Description This code looks up the LDAP Path of the \"Finance User Assurance\" OID and sets the associated group as the \"FinanceGroup\" Universal Security Group Parameters -Group Specifies the DN of a Universal Security Group to associate with this Policy OID (or leave $NULL) Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Path Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet does not return a value Notes Related Links New-FasPolicyOid Get-FasPolicyOid Remove-FasPolicyOid","title":"Set-FasPolicyOid"},{"location":"Set-FasPolicyOid/#set-faspolicyoid","text":"","title":"Set-FasPolicyOid"},{"location":"Set-FasPolicyOid/#synopsis","text":"Change the Universal Security Group associated with an Issuance Policy Oid registered in the domain.","title":"Synopsis"},{"location":"Set-FasPolicyOid/#syntax","text":"Set-FasPolicyOid -Path String -Group String [ CommonParameters ]","title":"Syntax"},{"location":"Set-FasPolicyOid/#description","text":"This cmdlet modifies the security group associated with a new Issuance Policy Oid registered in the domain by name. Certificate Issuance Policy Oids are attributes that can optionally be included in certificates issued by the Microsoft Certificate Authority. By default, these include Low/Medium/High Assurance levels and provide an indication of the level or type of approval to which a certificate holder has been authorized. When logging in, Windows will dynamically add the user to additional Universal Security Groups that have been associated with these Oids. Note that this cmdlet must be run using a High Privilege user account. Equivalent configuration can be done manually using the Microsoft LDAP configuration tools.","title":"Description"},{"location":"Set-FasPolicyOid/#examples","text":"","title":"Examples"},{"location":"Set-FasPolicyOid/#example-1","text":"PS C:\\> C:\\PS $PolicyOid=Get-FasPolicyOid -Name Finance User Assurance C:\\PS Set-FasPolicyOid -Path $PolicyOid.Path -Group CN=FinanceGroup,CN=Users,DC=citrixtest,DC=net Description This code looks up the LDAP Path of the \"Finance User Assurance\" OID and sets the associated group as the \"FinanceGroup\" Universal Security Group","title":"Example 1"},{"location":"Set-FasPolicyOid/#parameters","text":"","title":"Parameters"},{"location":"Set-FasPolicyOid/#-group","text":"Specifies the DN of a Universal Security Group to associate with this Policy OID (or leave $NULL) Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Group"},{"location":"Set-FasPolicyOid/#-path","text":"Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : None Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Path"},{"location":"Set-FasPolicyOid/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Set-FasPolicyOid/#inputs","text":"","title":"Inputs"},{"location":"Set-FasPolicyOid/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Set-FasPolicyOid/#outputs","text":"","title":"Outputs"},{"location":"Set-FasPolicyOid/#void","text":"This cmdlet does not return a value","title":"void"},{"location":"Set-FasPolicyOid/#notes","text":"","title":"Notes"},{"location":"Set-FasPolicyOid/#related-links","text":"New-FasPolicyOid Get-FasPolicyOid Remove-FasPolicyOid","title":"Related Links"},{"location":"Set-FasRule/","text":"Set-FasRule Synopsis Modify a Rule's configuration (a named instance of the Federated Authentication Service running on a server). Syntax Set-FasRule -Name String [-CertificateDefinitions String[] ] [-StoreFrontAcl String ] [-UserAcl String ] [-VdaAcl String ] [-DelegatedAdministrationAcl Boolean ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ] Description Set the configuration of an existing named rule controlling which trusted StoreFront servers can assert logon identities. The caller must be a member of the Rule's administration groups. Normally to log in to a Windows computer the Active Directory Domain Controllers require that \"primary credentials\" be present - that is a password, or a smartcard, etc. An instance of a Federated Authentication Service allows trusted servers to \"assert\" user identities without knowledge of primary credentials. The configuration options are: - The name of the Rule or Service instance. Usually there will be at least one service named \"default\", but further, independent services can be run. - A reference to the certificate definitions used to issue Virtual Smart Card certificates when user identities are asserted. Note that only Certificate Definitions marked \"InSession\" can be used after the logon stage. - A reference to the Virtual Smart Card to use for log on. By default this is the first in the list of Certificate Definitions. - A list of Windows Accounts that are trusted to assert identities for this Rule. For security reasons, this must be chosen very carefully - usually it will be the explicit machine accounts of your StoreFront servers. - A list of Windows User Accounts that can be asserted. Usually this will be restricted to a security group. For example \"ExternalCitrixUserGroup\" - A list of VDA Windows Accounts that can act as relying parties to log users in. For example, \"CitrixVdaMachines\" - A list of administrators who have can modify (but not create or delete) the rule. Examples Example 1 PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS $CertificateDefinition=(Get-FasCertificateDefinition)[0].name C:\\PS Set-FasRule -Name default -CertificateDefinitions @($CertificateDefinition) Description This code changes the CertificateDefinitions used by the rule named \"default\". Parameters -Name Specify the name of the rule to update. The caller must be an administrator of the rule. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -CertificateDefinitions Change the a list of CertificateDefinition names for Virtual Smart Cards to create. The first in the list will be used for the log on process. Type : String[] Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -StoreFrontAcl Change the SDDL Security Descriptor controlling which servers are trusted to assert user identities using this rule. E.g. \"D:P(A;OICI;CC;;;XXXX)\" replacing xxxx with a SID string. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserAcl Change the SDDL Security Descriptor controlling which user identities can be asserted by this rule. E.g. \"D:P(A;OICI;LC;;;XXXX)\" replacing xxxx with a SID string. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -VdaAcl Change the SDDL Security Descriptor controlling which VDAs can be logged into by this rule. E.g. \"D:P(A;OICI;DC;;;XXXX)\" replacing xxxx with a SID string. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -DelegatedAdministrationAcl Change the SDDL Security Descriptor controlling which users can change the configuration of this rule. E.g. \"D:P(A;OICI;SW;;;XXXX)\" replacing xxxx with a SID string. Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Address Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserName User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Password Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet does not return a value Notes Related Links New-FasRule Get-FasRule Remove-FasRule","title":"Set-FasRule"},{"location":"Set-FasRule/#set-fasrule","text":"","title":"Set-FasRule"},{"location":"Set-FasRule/#synopsis","text":"Modify a Rule's configuration (a named instance of the Federated Authentication Service running on a server).","title":"Synopsis"},{"location":"Set-FasRule/#syntax","text":"Set-FasRule -Name String [-CertificateDefinitions String[] ] [-StoreFrontAcl String ] [-UserAcl String ] [-VdaAcl String ] [-DelegatedAdministrationAcl Boolean ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ]","title":"Syntax"},{"location":"Set-FasRule/#description","text":"Set the configuration of an existing named rule controlling which trusted StoreFront servers can assert logon identities. The caller must be a member of the Rule's administration groups. Normally to log in to a Windows computer the Active Directory Domain Controllers require that \"primary credentials\" be present - that is a password, or a smartcard, etc. An instance of a Federated Authentication Service allows trusted servers to \"assert\" user identities without knowledge of primary credentials. The configuration options are: - The name of the Rule or Service instance. Usually there will be at least one service named \"default\", but further, independent services can be run. - A reference to the certificate definitions used to issue Virtual Smart Card certificates when user identities are asserted. Note that only Certificate Definitions marked \"InSession\" can be used after the logon stage. - A reference to the Virtual Smart Card to use for log on. By default this is the first in the list of Certificate Definitions. - A list of Windows Accounts that are trusted to assert identities for this Rule. For security reasons, this must be chosen very carefully - usually it will be the explicit machine accounts of your StoreFront servers. - A list of Windows User Accounts that can be asserted. Usually this will be restricted to a security group. For example \"ExternalCitrixUserGroup\" - A list of VDA Windows Accounts that can act as relying parties to log users in. For example, \"CitrixVdaMachines\" - A list of administrators who have can modify (but not create or delete) the rule.","title":"Description"},{"location":"Set-FasRule/#examples","text":"","title":"Examples"},{"location":"Set-FasRule/#example-1","text":"PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS $CertificateDefinition=(Get-FasCertificateDefinition)[0].name C:\\PS Set-FasRule -Name default -CertificateDefinitions @($CertificateDefinition) Description This code changes the CertificateDefinitions used by the rule named \"default\".","title":"Example 1"},{"location":"Set-FasRule/#parameters","text":"","title":"Parameters"},{"location":"Set-FasRule/#-name","text":"Specify the name of the rule to update. The caller must be an administrator of the rule. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Name"},{"location":"Set-FasRule/#-certificatedefinitions","text":"Change the a list of CertificateDefinition names for Virtual Smart Cards to create. The first in the list will be used for the log on process. Type : String[] Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CertificateDefinitions"},{"location":"Set-FasRule/#-storefrontacl","text":"Change the SDDL Security Descriptor controlling which servers are trusted to assert user identities using this rule. E.g. \"D:P(A;OICI;CC;;;XXXX)\" replacing xxxx with a SID string. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-StoreFrontAcl"},{"location":"Set-FasRule/#-useracl","text":"Change the SDDL Security Descriptor controlling which user identities can be asserted by this rule. E.g. \"D:P(A;OICI;LC;;;XXXX)\" replacing xxxx with a SID string. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserAcl"},{"location":"Set-FasRule/#-vdaacl","text":"Change the SDDL Security Descriptor controlling which VDAs can be logged into by this rule. E.g. \"D:P(A;OICI;DC;;;XXXX)\" replacing xxxx with a SID string. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-VdaAcl"},{"location":"Set-FasRule/#-delegatedadministrationacl","text":"Change the SDDL Security Descriptor controlling which users can change the configuration of this rule. E.g. \"D:P(A;OICI;SW;;;XXXX)\" replacing xxxx with a SID string. Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-DelegatedAdministrationAcl"},{"location":"Set-FasRule/#-address","text":"Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"Set-FasRule/#-username","text":"User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserName"},{"location":"Set-FasRule/#-password","text":"Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Password"},{"location":"Set-FasRule/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Set-FasRule/#inputs","text":"","title":"Inputs"},{"location":"Set-FasRule/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Set-FasRule/#outputs","text":"","title":"Outputs"},{"location":"Set-FasRule/#void","text":"This cmdlet does not return a value","title":"void"},{"location":"Set-FasRule/#notes","text":"","title":"Notes"},{"location":"Set-FasRule/#related-links","text":"New-FasRule Get-FasRule Remove-FasRule","title":"Related Links"},{"location":"Set-FasServer/","text":"Set-FasServer Synopsis Set information on a Federated Authentication Service (FAS) server. Syntax Set-FasServer [-MaintenanceMode Boolean ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ] Description This cmdlet can modify information about a Federated Authentication Service (FAS) servers. In particular, this can enable/disable Maintenance mode making the Fas Server rejects new connections (callers will fail over to different FAS servers). Examples Example 1 PS C:\\> C:\\PS $CitrixFasAddress = (Get-FasServer)[0].Address C:\\PS Set-FasServer -MaintenanceMode $FALSE Description This code lists the FAS Servers configured via Group Policy. Parameters -MaintenanceMode Set the MaintenanceMode flag Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Address Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserName User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Password Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet returns a list of FAS server objects Notes Related Links","title":"Set-FasServer"},{"location":"Set-FasServer/#set-fasserver","text":"","title":"Set-FasServer"},{"location":"Set-FasServer/#synopsis","text":"Set information on a Federated Authentication Service (FAS) server.","title":"Synopsis"},{"location":"Set-FasServer/#syntax","text":"Set-FasServer [-MaintenanceMode Boolean ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ]","title":"Syntax"},{"location":"Set-FasServer/#description","text":"This cmdlet can modify information about a Federated Authentication Service (FAS) servers. In particular, this can enable/disable Maintenance mode making the Fas Server rejects new connections (callers will fail over to different FAS servers).","title":"Description"},{"location":"Set-FasServer/#examples","text":"","title":"Examples"},{"location":"Set-FasServer/#example-1","text":"PS C:\\> C:\\PS $CitrixFasAddress = (Get-FasServer)[0].Address C:\\PS Set-FasServer -MaintenanceMode $FALSE Description This code lists the FAS Servers configured via Group Policy.","title":"Example 1"},{"location":"Set-FasServer/#parameters","text":"","title":"Parameters"},{"location":"Set-FasServer/#-maintenancemode","text":"Set the MaintenanceMode flag Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (default) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-MaintenanceMode"},{"location":"Set-FasServer/#-address","text":"Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"Set-FasServer/#-username","text":"User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserName"},{"location":"Set-FasServer/#-password","text":"Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Password"},{"location":"Set-FasServer/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Set-FasServer/#inputs","text":"","title":"Inputs"},{"location":"Set-FasServer/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Set-FasServer/#outputs","text":"","title":"Outputs"},{"location":"Set-FasServer/#void","text":"This cmdlet returns a list of FAS server objects","title":"void"},{"location":"Set-FasServer/#notes","text":"","title":"Notes"},{"location":"Set-FasServer/#related-links","text":"","title":"Related Links"},{"location":"Test-FasCertificateSigningRequest/","text":"Test-FasCertificateSigningRequest Synopsis Performs a test certificate signing request (CSR) Syntax Test-FasCertificateSigningRequest -UserPrincipalName String -Rule String [-CertificateDefinition String ] [-CertificateAuthority String ] [-SecurityContext String ] [-ReuseCachedTestKey String ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ] Description This command performs a test CSR. Any resulting certificate is discarded. Use this test to verify CSRs to the Certificate Authority are working. The supplied Certificate Definition defines the certificate template, authorization certificate and policy oids used for the CSR. The supplied Certificate Authority address must be present in the supplied CertificateDefinition. If ReuseCachedTestKey is false, a new key-pair is created for the CSR. If ReuseCachedTestKey is true, the test re-uses a cached key-pair for the CSR in order to avoid the overhead of generating a new key-pair. The cached key-pair is generated on demand per UPN, and is re-used for a maximum of 1 hour, after which a new key-pair is generated. Examples Example 1 PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Test-FasCertificateSigningRequest -UserPrincipalName fred@citrixtest.net -Rule Default Description This code performs a test CSR. Parameters -UserPrincipalName Specify the UPN of the user for whom this certificate is being generated. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Rule Specify the Rule name to use when generating the CSR. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -CertificateDefinition Specify the Certificate Definition to use when generating the CSR. If not supplied, the first Certificate Definition of the Rule is used. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -CertificateAuthority Specify the address of Certificate Authority to send the CSR to. If not supplied, the first Certificate Authority of the Certificate Definition is used. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -SecurityContext Specify the Security Context to use when generating the certificate. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -ReuseCachedTestKey Specify whether to re-use a test key-pair in the CSR. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $False Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Address Address of FAS Server (or $NULL to use $CitrixFasAddress). Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserName User name to use for authentication to FAS server ($NULL for current user account). Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Password Password for authentication to FAS server ($NULL for current user account). Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs DiagnosticTestResult This cmdlet returns a DiagnosticTestResult object Notes Related Links","title":"Test-FasCertificateSigningRequest"},{"location":"Test-FasCertificateSigningRequest/#test-fascertificatesigningrequest","text":"","title":"Test-FasCertificateSigningRequest"},{"location":"Test-FasCertificateSigningRequest/#synopsis","text":"Performs a test certificate signing request (CSR)","title":"Synopsis"},{"location":"Test-FasCertificateSigningRequest/#syntax","text":"Test-FasCertificateSigningRequest -UserPrincipalName String -Rule String [-CertificateDefinition String ] [-CertificateAuthority String ] [-SecurityContext String ] [-ReuseCachedTestKey String ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ]","title":"Syntax"},{"location":"Test-FasCertificateSigningRequest/#description","text":"This command performs a test CSR. Any resulting certificate is discarded. Use this test to verify CSRs to the Certificate Authority are working. The supplied Certificate Definition defines the certificate template, authorization certificate and policy oids used for the CSR. The supplied Certificate Authority address must be present in the supplied CertificateDefinition. If ReuseCachedTestKey is false, a new key-pair is created for the CSR. If ReuseCachedTestKey is true, the test re-uses a cached key-pair for the CSR in order to avoid the overhead of generating a new key-pair. The cached key-pair is generated on demand per UPN, and is re-used for a maximum of 1 hour, after which a new key-pair is generated.","title":"Description"},{"location":"Test-FasCertificateSigningRequest/#examples","text":"","title":"Examples"},{"location":"Test-FasCertificateSigningRequest/#example-1","text":"PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Test-FasCertificateSigningRequest -UserPrincipalName fred@citrixtest.net -Rule Default Description This code performs a test CSR.","title":"Example 1"},{"location":"Test-FasCertificateSigningRequest/#parameters","text":"","title":"Parameters"},{"location":"Test-FasCertificateSigningRequest/#-userprincipalname","text":"Specify the UPN of the user for whom this certificate is being generated. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserPrincipalName"},{"location":"Test-FasCertificateSigningRequest/#-rule","text":"Specify the Rule name to use when generating the CSR. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Rule"},{"location":"Test-FasCertificateSigningRequest/#-certificatedefinition","text":"Specify the Certificate Definition to use when generating the CSR. If not supplied, the first Certificate Definition of the Rule is used. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CertificateDefinition"},{"location":"Test-FasCertificateSigningRequest/#-certificateauthority","text":"Specify the address of Certificate Authority to send the CSR to. If not supplied, the first Certificate Authority of the Certificate Definition is used. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CertificateAuthority"},{"location":"Test-FasCertificateSigningRequest/#-securitycontext","text":"Specify the Security Context to use when generating the certificate. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-SecurityContext"},{"location":"Test-FasCertificateSigningRequest/#-reusecachedtestkey","text":"Specify whether to re-use a test key-pair in the CSR. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $False Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-ReuseCachedTestKey"},{"location":"Test-FasCertificateSigningRequest/#-address","text":"Address of FAS Server (or $NULL to use $CitrixFasAddress). Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"Test-FasCertificateSigningRequest/#-username","text":"User name to use for authentication to FAS server ($NULL for current user account). Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserName"},{"location":"Test-FasCertificateSigningRequest/#-password","text":"Password for authentication to FAS server ($NULL for current user account). Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Password"},{"location":"Test-FasCertificateSigningRequest/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Test-FasCertificateSigningRequest/#inputs","text":"","title":"Inputs"},{"location":"Test-FasCertificateSigningRequest/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Test-FasCertificateSigningRequest/#outputs","text":"","title":"Outputs"},{"location":"Test-FasCertificateSigningRequest/#diagnostictestresult","text":"This cmdlet returns a DiagnosticTestResult object","title":"DiagnosticTestResult"},{"location":"Test-FasCertificateSigningRequest/#notes","text":"","title":"Notes"},{"location":"Test-FasCertificateSigningRequest/#related-links","text":"","title":"Related Links"},{"location":"Test-FasCrypto/","text":"Test-FasCrypto Synopsis Performs a test signature operation Syntax Test-FasCrypto [-HashingAlgorithm String ] [-ReuseCachedTestKey String ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ] Description This command signs a piece of data using a test private key. The signature created is discarded. Use this test to verify cyptography is working. If ReuseCachedTestKey is false, a new key-pair is created for the signing operation. If ReuseCachedTestKey is true, the test re-uses a cached key-pair for the signing operation in order to avoid the overhead of generating a new key-pair. Examples Example 1 PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Test-FasCrypto Description This code performs a signature using a test private key Parameters -HashingAlgorithm Specify the hashing algorithm to use when performing the signature. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : SHA256 Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -ReuseCachedTestKey Specify whether to re-use a test key-pair in the signing operation. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $False Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Address Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserName User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Password Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs DiagnosticTestResult This cmdlet returns a DiagnosticTestResult object Notes Related Links Test-FasUserCertificateCrypto","title":"Test-FasCrypto"},{"location":"Test-FasCrypto/#test-fascrypto","text":"","title":"Test-FasCrypto"},{"location":"Test-FasCrypto/#synopsis","text":"Performs a test signature operation","title":"Synopsis"},{"location":"Test-FasCrypto/#syntax","text":"Test-FasCrypto [-HashingAlgorithm String ] [-ReuseCachedTestKey String ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ]","title":"Syntax"},{"location":"Test-FasCrypto/#description","text":"This command signs a piece of data using a test private key. The signature created is discarded. Use this test to verify cyptography is working. If ReuseCachedTestKey is false, a new key-pair is created for the signing operation. If ReuseCachedTestKey is true, the test re-uses a cached key-pair for the signing operation in order to avoid the overhead of generating a new key-pair.","title":"Description"},{"location":"Test-FasCrypto/#examples","text":"","title":"Examples"},{"location":"Test-FasCrypto/#example-1","text":"PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Test-FasCrypto Description This code performs a signature using a test private key","title":"Example 1"},{"location":"Test-FasCrypto/#parameters","text":"","title":"Parameters"},{"location":"Test-FasCrypto/#-hashingalgorithm","text":"Specify the hashing algorithm to use when performing the signature. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : SHA256 Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-HashingAlgorithm"},{"location":"Test-FasCrypto/#-reusecachedtestkey","text":"Specify whether to re-use a test key-pair in the signing operation. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $False Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-ReuseCachedTestKey"},{"location":"Test-FasCrypto/#-address","text":"Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"Test-FasCrypto/#-username","text":"User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserName"},{"location":"Test-FasCrypto/#-password","text":"Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Password"},{"location":"Test-FasCrypto/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Test-FasCrypto/#inputs","text":"","title":"Inputs"},{"location":"Test-FasCrypto/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Test-FasCrypto/#outputs","text":"","title":"Outputs"},{"location":"Test-FasCrypto/#diagnostictestresult","text":"This cmdlet returns a DiagnosticTestResult object","title":"DiagnosticTestResult"},{"location":"Test-FasCrypto/#notes","text":"","title":"Notes"},{"location":"Test-FasCrypto/#related-links","text":"Test-FasUserCertificateCrypto","title":"Related Links"},{"location":"Test-FasKeyPairCreation/","text":"Test-FasKeyPairCreation Synopsis Creates a key pair Syntax Test-FasKeyPairCreation [-AddToPrivateKeyPool Boolean ] [-PrivateKeyPoolSizeLimit Int32 ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ] Description This command creates a key pair using the FAS server's configured cryptographic settings. Use this command to verify key pair creation is working. The created key pair is discarded by default; use the AddToPrivateKeyPool parameter to add the key pair to the FAS server's private key pool for use in a subsequent certificate signing request (CSR). Doing this is advantageous because key pair creation is resource intensive. Even if AddToPrivateKeyPool is set to $true, the created key pair is still discarded if the private key pool has reached its target size (as defined by the FAS server's PrivateKeyPoolSize configuration setting). Use the PrivateKeyPoolSizeLimit parameter to allow the key pool to expand beyond its configured target size. When the FAS service is stopped, unused keys in the private key pool are destroyed. Examples Example 1 PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Test-FasKeyPairCreation -AddToPrivateKeyPool $true Description This code creates a key pair, and if successful adds the key pair to the FAS server's private key pool, provided the key pool has not already reached its target size. Parameters -AddToPrivateKeyPool If true, the created key pair is added to the FAS server's private key pool; if false the key pair is discarded Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $False Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -PrivateKeyPoolSizeLimit Override the target private key pool size in the FAS server configuration (0 means do not override) Type : Int32 Parameter Sets : (All) Aliases : Required : False Position : Named Default value : 0 Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Address Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserName User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Password Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs DiagnosticTestResult This cmdlet returns a DiagnosticTestResult object Notes Related Links Get-FasPrivateKeyPoolInfo","title":"Test-FasKeyPairCreation"},{"location":"Test-FasKeyPairCreation/#test-faskeypaircreation","text":"","title":"Test-FasKeyPairCreation"},{"location":"Test-FasKeyPairCreation/#synopsis","text":"Creates a key pair","title":"Synopsis"},{"location":"Test-FasKeyPairCreation/#syntax","text":"Test-FasKeyPairCreation [-AddToPrivateKeyPool Boolean ] [-PrivateKeyPoolSizeLimit Int32 ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ]","title":"Syntax"},{"location":"Test-FasKeyPairCreation/#description","text":"This command creates a key pair using the FAS server's configured cryptographic settings. Use this command to verify key pair creation is working. The created key pair is discarded by default; use the AddToPrivateKeyPool parameter to add the key pair to the FAS server's private key pool for use in a subsequent certificate signing request (CSR). Doing this is advantageous because key pair creation is resource intensive. Even if AddToPrivateKeyPool is set to $true, the created key pair is still discarded if the private key pool has reached its target size (as defined by the FAS server's PrivateKeyPoolSize configuration setting). Use the PrivateKeyPoolSizeLimit parameter to allow the key pool to expand beyond its configured target size. When the FAS service is stopped, unused keys in the private key pool are destroyed.","title":"Description"},{"location":"Test-FasKeyPairCreation/#examples","text":"","title":"Examples"},{"location":"Test-FasKeyPairCreation/#example-1","text":"PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Test-FasKeyPairCreation -AddToPrivateKeyPool $true Description This code creates a key pair, and if successful adds the key pair to the FAS server's private key pool, provided the key pool has not already reached its target size.","title":"Example 1"},{"location":"Test-FasKeyPairCreation/#parameters","text":"","title":"Parameters"},{"location":"Test-FasKeyPairCreation/#-addtoprivatekeypool","text":"If true, the created key pair is added to the FAS server's private key pool; if false the key pair is discarded Type : Boolean Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $False Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-AddToPrivateKeyPool"},{"location":"Test-FasKeyPairCreation/#-privatekeypoolsizelimit","text":"Override the target private key pool size in the FAS server configuration (0 means do not override) Type : Int32 Parameter Sets : (All) Aliases : Required : False Position : Named Default value : 0 Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-PrivateKeyPoolSizeLimit"},{"location":"Test-FasKeyPairCreation/#-address","text":"Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"Test-FasKeyPairCreation/#-username","text":"User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserName"},{"location":"Test-FasKeyPairCreation/#-password","text":"Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Password"},{"location":"Test-FasKeyPairCreation/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Test-FasKeyPairCreation/#inputs","text":"","title":"Inputs"},{"location":"Test-FasKeyPairCreation/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Test-FasKeyPairCreation/#outputs","text":"","title":"Outputs"},{"location":"Test-FasKeyPairCreation/#diagnostictestresult","text":"This cmdlet returns a DiagnosticTestResult object","title":"DiagnosticTestResult"},{"location":"Test-FasKeyPairCreation/#notes","text":"","title":"Notes"},{"location":"Test-FasKeyPairCreation/#related-links","text":"Get-FasPrivateKeyPoolInfo","title":"Related Links"},{"location":"Test-FasUserCertificateCrypto/","text":"Test-FasUserCertificateCrypto Synopsis Performs a test signature operation with a user certificate Syntax Test-FasUserCertificateCrypto -UserPrincipalName String -Rule String [-CertificateDefinition String ] [-HashingAlgorithm String ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ] Description This command signs a piece of data using the private key bound to the user certificate with the given properties. The signature created is discarded. Use this test to verify cyptography is working for a particular user certificate. If a Certificate Definition is not supplied, the test is performed using the first Certificate Definition of the specified Rule. Examples Example 1 PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Test-FasUserCertificateCrypto -UserPrincipalName fred@citrixtest.net -Rule Default Description This code performs a test signature using a user certificate Parameters -UserPrincipalName Specify the UPN assoicated with the user certificate. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Rule Specify the Rule associated with the user certificate. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -CertificateDefinition Specify the Certificate Definition associated with the user certificate. If not supplied, the first Certificate Definition of the Rule is used. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (the first certificate definition in the given rule) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -HashingAlgorithm Specify the hashing algorithm to use when performing the signature. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : SHA256 Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Address Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -UserName User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -Password Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs DiagnosticTestResult This cmdlet returns a DiagnosticTestResult object Notes Related Links New-FasUserCertificate Get-FasUserCertificate Test-FasCrypto","title":"Test-FasUserCertificateCrypto"},{"location":"Test-FasUserCertificateCrypto/#test-fasusercertificatecrypto","text":"","title":"Test-FasUserCertificateCrypto"},{"location":"Test-FasUserCertificateCrypto/#synopsis","text":"Performs a test signature operation with a user certificate","title":"Synopsis"},{"location":"Test-FasUserCertificateCrypto/#syntax","text":"Test-FasUserCertificateCrypto -UserPrincipalName String -Rule String [-CertificateDefinition String ] [-HashingAlgorithm String ] [-Address String ] [-UserName String ] [-Password String ] [ CommonParameters ]","title":"Syntax"},{"location":"Test-FasUserCertificateCrypto/#description","text":"This command signs a piece of data using the private key bound to the user certificate with the given properties. The signature created is discarded. Use this test to verify cyptography is working for a particular user certificate. If a Certificate Definition is not supplied, the test is performed using the first Certificate Definition of the specified Rule.","title":"Description"},{"location":"Test-FasUserCertificateCrypto/#examples","text":"","title":"Examples"},{"location":"Test-FasUserCertificateCrypto/#example-1","text":"PS C:\\> C:\\PS $CitrixFasAddress=(Get-FasServer)[0].Address C:\\PS Test-FasUserCertificateCrypto -UserPrincipalName fred@citrixtest.net -Rule Default Description This code performs a test signature using a user certificate","title":"Example 1"},{"location":"Test-FasUserCertificateCrypto/#parameters","text":"","title":"Parameters"},{"location":"Test-FasUserCertificateCrypto/#-userprincipalname","text":"Specify the UPN assoicated with the user certificate. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserPrincipalName"},{"location":"Test-FasUserCertificateCrypto/#-rule","text":"Specify the Rule associated with the user certificate. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Rule"},{"location":"Test-FasUserCertificateCrypto/#-certificatedefinition","text":"Specify the Certificate Definition associated with the user certificate. If not supplied, the first Certificate Definition of the Rule is used. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : (the first certificate definition in the given rule) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CertificateDefinition"},{"location":"Test-FasUserCertificateCrypto/#-hashingalgorithm","text":"Specify the hashing algorithm to use when performing the signature. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : SHA256 Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-HashingAlgorithm"},{"location":"Test-FasUserCertificateCrypto/#-address","text":"Address of FAS Server (or $NULL to use $CitrixFasAddress) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $CitrixFasAddress Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Address"},{"location":"Test-FasUserCertificateCrypto/#-username","text":"User name to use for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-UserName"},{"location":"Test-FasUserCertificateCrypto/#-password","text":"Password for authentication to FAS server ($NULL for current user account) Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : $NULL Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Password"},{"location":"Test-FasUserCertificateCrypto/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Test-FasUserCertificateCrypto/#inputs","text":"","title":"Inputs"},{"location":"Test-FasUserCertificateCrypto/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Test-FasUserCertificateCrypto/#outputs","text":"","title":"Outputs"},{"location":"Test-FasUserCertificateCrypto/#diagnostictestresult","text":"This cmdlet returns a DiagnosticTestResult object","title":"DiagnosticTestResult"},{"location":"Test-FasUserCertificateCrypto/#notes","text":"","title":"Notes"},{"location":"Test-FasUserCertificateCrypto/#related-links","text":"New-FasUserCertificate Get-FasUserCertificate Test-FasCrypto","title":"Related Links"},{"location":"Unpublish-FasMsTemplate/","text":"Unpublish-FasMsTemplate Synopsis Stop publishing a Microsoft Certificate Template on a Microsoft Certificate Authority. Syntax Unpublish-FasMsTemplate -Name String -CertificateAuthority String [ CommonParameters ] Description This command instructs a Microsoft Certificate Authority to stop publishing a Microsoft Certificate Template. After running this command, the Certificate Authority will no longer issue certificates of this type. Note that this cmdlet must be run using a High Privilege user account. Equivalent configuration can be done manually using the Microsoft GUI tools. Examples Example 1 PS C:\\> C:\\PS $ca = Get-FasMSCertificateAuthority -default C:\\PS Unpublish-FasMsTemplate -Name Citrix_SmartcardLogon -CertificateAuthority $ca.Address Description This command instructs the certificate authority on dc.citrixtest.net to stop issuing certificates based on the Citrix_SmartcardLogon template. Parameters -Name Specifies the name of the Microsoft Certificate Template to stop publishing. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (required) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False -CertificateAuthority Specifies the Certificate Authority that should no longer publish this template. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (required) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Inputs Variable, based on property name. This cmdlet does accept input from the pipeline but only by property name. Outputs void This cmdlet does not return a value Notes Related Links Publish-FasMsTemplate Get-FasMsCertificateAuthority","title":"Unpublish-FasMsTemplate"},{"location":"Unpublish-FasMsTemplate/#unpublish-fasmstemplate","text":"","title":"Unpublish-FasMsTemplate"},{"location":"Unpublish-FasMsTemplate/#synopsis","text":"Stop publishing a Microsoft Certificate Template on a Microsoft Certificate Authority.","title":"Synopsis"},{"location":"Unpublish-FasMsTemplate/#syntax","text":"Unpublish-FasMsTemplate -Name String -CertificateAuthority String [ CommonParameters ]","title":"Syntax"},{"location":"Unpublish-FasMsTemplate/#description","text":"This command instructs a Microsoft Certificate Authority to stop publishing a Microsoft Certificate Template. After running this command, the Certificate Authority will no longer issue certificates of this type. Note that this cmdlet must be run using a High Privilege user account. Equivalent configuration can be done manually using the Microsoft GUI tools.","title":"Description"},{"location":"Unpublish-FasMsTemplate/#examples","text":"","title":"Examples"},{"location":"Unpublish-FasMsTemplate/#example-1","text":"PS C:\\> C:\\PS $ca = Get-FasMSCertificateAuthority -default C:\\PS Unpublish-FasMsTemplate -Name Citrix_SmartcardLogon -CertificateAuthority $ca.Address Description This command instructs the certificate authority on dc.citrixtest.net to stop issuing certificates based on the Citrix_SmartcardLogon template.","title":"Example 1"},{"location":"Unpublish-FasMsTemplate/#parameters","text":"","title":"Parameters"},{"location":"Unpublish-FasMsTemplate/#-name","text":"Specifies the name of the Microsoft Certificate Template to stop publishing. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (required) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-Name"},{"location":"Unpublish-FasMsTemplate/#-certificateauthority","text":"Specifies the Certificate Authority that should no longer publish this template. Type : String Parameter Sets : (All) Aliases : Required : True Position : Named Default value : (required) Accept pipeline input : True (ByPropertyName) Accept wildcard characters : False","title":"-CertificateAuthority"},{"location":"Unpublish-FasMsTemplate/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Unpublish-FasMsTemplate/#inputs","text":"","title":"Inputs"},{"location":"Unpublish-FasMsTemplate/#variable-based-on-property-name","text":"This cmdlet does accept input from the pipeline but only by property name.","title":"Variable, based on property name."},{"location":"Unpublish-FasMsTemplate/#outputs","text":"","title":"Outputs"},{"location":"Unpublish-FasMsTemplate/#void","text":"This cmdlet does not return a value","title":"void"},{"location":"Unpublish-FasMsTemplate/#notes","text":"","title":"Notes"},{"location":"Unpublish-FasMsTemplate/#related-links","text":"Publish-FasMsTemplate Get-FasMsCertificateAuthority","title":"Related Links"}]}